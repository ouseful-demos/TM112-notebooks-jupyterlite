{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/observables/lib/observablemap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/services/lib/kernel/serialize.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/async-mutex/index.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/localforage/dist/localforage.js"],"names":["Private","ObservableMap","options","this","_map","Map","_changed","Signal","_isDisposed","_itemCmp","itemCmp","values","key","set","size","value","oldVal","get","undefined","Error","emit","type","oldValue","newValue","has","keyList","forEach","v","k","push","valList","delete","keys","i","length","isDisposed","clear","first","second","Object","defineProperty","exports","serialize","deserialize","data","JSON","parse","buf","DataView","nbufs","getUint32","offsets","jsonBytes","Uint8Array","slice","msg","TextDecoder","decode","buffers","start","stop","byteLength","deserializeBinary","_a","encoder","TextEncoder","origBuffers","jsonUtf8","encode","stringify","buffer","b","ArrayBuffer","isView","msgBuf","view","setUint32","serializeBinary","E_CANCELED","Semaphore","_maxConcurrency","_cancelError","_queue","_value","locked","isLocked","ticketPromise","Promise","resolve","reject","_dispatch","callback","thisArg","_arguments","generator","release","acquire","P","fulfilled","step","next","e","rejected","result","done","then","apply","_currentReleaser","releaser","ticket","nextTicket","shift","released","Mutex","cancelError","_semaphore","runExclusive","cancel","module","t","n","r","s","o","u","f","code","l","call","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","g","self","window","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","obj","arguments","thenable","onError","onSuccess","tryCatch","status","out","prototype","constructor","error","reason","all","iterable","toString","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","arr","charCodeAt","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","ready","initPromises","ignoreErrors","j","_defaultConfig","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","count","advanced","openKeyCursor","advance","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","bytes","bufferToString","base64String","substring","localforageSerializer","valueType","marker","fileReader","onload","str","readAsArrayBuffer","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance"],"mappings":";wJA4KIA,E,WAtKG,MAAMC,EAIT,YAAYC,EAAU,IAKlB,GAJAC,KAAKC,KAAO,IAAIC,IAChBF,KAAKG,SAAW,IAAI,EAAAC,OAAOJ,MAC3BA,KAAKK,aAAc,EACnBL,KAAKM,SAAWP,EAAQQ,SAAWV,EAAQU,QACvCR,EAAQS,OACR,IAAK,MAAMC,KAAOV,EAAQS,OACtBR,KAAKC,KAAKS,IAAID,EAAKV,EAAQS,OAAOC,IAO9C,WACI,MAAO,MAKX,cACI,OAAOT,KAAKG,SAKhB,iBACI,OAAOH,KAAKK,YAKhB,WACI,OAAOL,KAAKC,KAAKU,KAiBrB,IAAIF,EAAKG,GACL,MAAMC,EAASb,KAAKC,KAAKa,IAAIL,GAC7B,QAAcM,IAAVH,EACA,MAAMI,MAAM,6CAGhB,MAAMT,EAAUP,KAAKM,SACrB,YAAeS,IAAXF,GAAwBN,EAAQM,EAAQD,KAG5CZ,KAAKC,KAAKS,IAAID,EAAKG,GACnBZ,KAAKG,SAASc,KAAK,CACfC,KAAML,EAAS,SAAW,MAC1BJ,IAAKA,EACLU,SAAUN,EACVO,SAAUR,KAPHC,EAkBf,IAAIJ,GACA,OAAOT,KAAKC,KAAKa,IAAIL,GASzB,IAAIA,GACA,OAAOT,KAAKC,KAAKoB,IAAIZ,GAOzB,OACI,MAAMa,EAAU,GAIhB,OAHAtB,KAAKC,KAAKsB,SAAQ,CAACC,EAAGC,KAClBH,EAAQI,KAAKD,MAEVH,EAOX,SACI,MAAMK,EAAU,GAIhB,OAHA3B,KAAKC,KAAKsB,SAAQ,CAACC,EAAGC,KAClBE,EAAQD,KAAKF,MAEVG,EAaX,OAAOlB,GACH,MAAMI,EAASb,KAAKC,KAAKa,IAAIL,GAU7B,OATgBT,KAAKC,KAAK2B,OAAOnB,IAE7BT,KAAKG,SAASc,KAAK,CACfC,KAAM,SACNT,IAAKA,EACLU,SAAUN,EACVO,cAAUL,IAGXF,EAKX,QAEI,MAAMS,EAAUtB,KAAK6B,OACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAQS,OAAQD,IAChC9B,KAAK4B,OAAON,EAAQQ,IAM5B,UACQ9B,KAAKgC,aAGThC,KAAKK,aAAc,EACnB,EAAAD,OAAA,UAAiBJ,MACjBA,KAAKC,KAAKgC,WAOlB,SAAWpC,GAOPA,EAAQU,QAHR,SAAiB2B,EAAOC,GACpB,OAAOD,IAAUC,GALzB,CAQGtC,IAAYA,EAAU,M,2BClLzBuC,OAAOC,eAAeC,EAAS,aAAc,CAAE1B,OAAO,IACtD0B,EAAQC,UAAYD,EAAQE,iBAAc,EAiB1CF,EAAQE,YAVR,SAAqBC,GACjB,IAAI7B,EAOJ,OALIA,EADgB,iBAAT6B,EACCC,KAAKC,MAAMF,GA8B3B,SAA2BG,GACvB,MAAMH,EAAO,IAAII,SAASD,GAEpBE,EAAQL,EAAKM,UAAU,GACvBC,EAAU,GAChB,GAAIF,EAAQ,EACR,MAAM,IAAI9B,MAAM,mCAEpB,IAAK,IAAIc,EAAI,EAAGA,GAAKgB,EAAOhB,IACxBkB,EAAQtB,KAAKe,EAAKM,UAAc,EAAJjB,IAEhC,MAAMmB,EAAY,IAAIC,WAAWN,EAAIO,MAAMH,EAAQ,GAAIA,EAAQ,KACzDI,EAAMV,KAAKC,MAAM,IAAIU,YAAY,QAAQC,OAAOL,IAEtDG,EAAIG,QAAU,GACd,IAAK,IAAIzB,EAAI,EAAGA,EAAIgB,EAAOhB,IAAK,CAC5B,MAAM0B,EAAQR,EAAQlB,GAChB2B,EAAOT,EAAQlB,EAAI,IAAMc,EAAIc,WACnCN,EAAIG,QAAQ7B,KAAK,IAAImB,SAASD,EAAIO,MAAMK,EAAOC,KAEnD,OAAOL,EA/CKO,CAAkBlB,GAEvB7B,GAqBX0B,EAAQC,UAXR,SAAmBa,GACf,IAAIQ,EACJ,IAAIhD,EAOJ,OALIA,GADuB,QAAtBgD,EAAKR,EAAIG,eAA4B,IAAPK,OAAgB,EAASA,EAAG7B,QAuCnE,SAAyBqB,GACrB,MAAMJ,EAAU,GACVO,EAAU,GACVM,EAAU,IAAIC,YACpB,IAAIC,EAAc,QACEhD,IAAhBqC,EAAIG,UACJQ,EAAcX,EAAIG,eACXH,EAAa,SAExB,MAAMY,EAAWH,EAAQI,OAAOvB,KAAKwB,UAAUd,IAC/CG,EAAQ7B,KAAKsC,EAASG,QACtB,IAAK,IAAIrC,EAAI,EAAGA,EAAIiC,EAAYhC,OAAQD,IAAK,CAGzC,MAAMsC,EAAIL,EAAYjC,GACtByB,EAAQ7B,KAAK2C,YAAYC,OAAOF,GAAKA,EAAED,OAASC,GAEpD,MAAMtB,EAAQS,EAAQxB,OACtBiB,EAAQtB,KAAK,GAAKoB,EAAQ,IAC1B,IAAK,IAAIhB,EAAI,EAAGA,EAAI,EAAIyB,EAAQxB,OAAQD,IACpCkB,EAAQtB,KAAKsB,EAAQA,EAAQjB,OAAS,GAAKwB,EAAQzB,GAAG4B,YAE1D,MAAMa,EAAS,IAAIrB,WAAWF,EAAQA,EAAQjB,OAAS,GAAKwB,EAAQA,EAAQxB,OAAS,GAAG2B,YAElFc,EAAO,IAAI3B,SAAS0B,EAAOJ,QAEjCK,EAAKC,UAAU,EAAG3B,GAElB,IAAK,IAAIhB,EAAI,EAAGA,EAAIkB,EAAQjB,OAAQD,IAChC0C,EAAKC,UAAU,GAAK3C,EAAI,GAAIkB,EAAQlB,IAGxC,IAAK,IAAIA,EAAI,EAAGA,EAAIyB,EAAQxB,OAAQD,IAChCyC,EAAO7D,IAAI,IAAIwC,WAAWK,EAAQzB,IAAKkB,EAAQlB,IAEnD,OAAOyC,EAAOJ,OAzEFO,CAAgBtB,GAGhBV,KAAKwB,UAAUd,GAEpBxC,I,8CCtCO,IAAII,MAAM,uDACH,IAAIA,MAAM,wBADnC,MAEM2D,EAAa,IAAI3D,MAAM,6BAW7B,MAAM4D,EACF,YAAYC,EAAiBC,EAAeH,GAIxC,GAHA3E,KAAK6E,gBAAkBA,EACvB7E,KAAK8E,aAAeA,EACpB9E,KAAK+E,OAAS,GACVF,GAAmB,EACnB,MAAM,IAAI7D,MAAM,qDAEpBhB,KAAKgF,OAASH,EAElB,UACI,MAAMI,EAASjF,KAAKkF,WACdC,EAAgB,IAAIC,SAAQ,CAACC,EAASC,IAAWtF,KAAK+E,OAAOrD,KAAK,CAAE2D,UAASC,aAGnF,OAFKL,GACDjF,KAAKuF,YACFJ,EAEX,aAAaK,GACT,OA3BwDC,EA2BvCzF,KA3BgD0F,OA2B1C,EA3ByDC,EA2BzC,YACnC,MAAO/E,EAAOgF,SAAiB5F,KAAK6F,UACpC,IACI,aAAaL,EAAS5E,GAE1B,QACIgF,MA/BL,KAF0EE,OA2B9C,KAzBjBA,EAAIV,WAAU,SAAUC,EAASC,GAC/C,SAASS,EAAUnF,GAAS,IAAMoF,EAAKL,EAAUM,KAAKrF,IAAW,MAAOsF,GAAKZ,EAAOY,IACpF,SAASC,EAASvF,GAAS,IAAMoF,EAAKL,EAAiB,MAAE/E,IAAW,MAAOsF,GAAKZ,EAAOY,IACvF,SAASF,EAAKI,GAJlB,IAAexF,EAIawF,EAAOC,KAAOhB,EAAQe,EAAOxF,QAJ1CA,EAIyDwF,EAAOxF,MAJhDA,aAAiBkF,EAAIlF,EAAQ,IAAIkF,GAAE,SAAUT,GAAWA,EAAQzE,OAIT0F,KAAKP,EAAWI,GAClGH,GAAML,EAAYA,EAAUY,MAAMd,EAASC,GAAc,KAAKO,WANhB,IAAUR,EAASC,EAAYI,EAAGH,EAqCpF,WACI,OAAO3F,KAAKgF,QAAU,EAG1B,UACI,GAAIhF,KAAK6E,gBAAkB,EACvB,MAAM,IAAI7D,MAAM,qHAEpB,GAAIhB,KAAKwG,iBAAkB,CACvB,MAAMC,EAAWzG,KAAKwG,iBACtBxG,KAAKwG,sBAAmBzF,EACxB0F,KAGR,SACIzG,KAAK+E,OAAOxD,SAASmF,GAAWA,EAAOpB,OAAOtF,KAAK8E,gBACnD9E,KAAK+E,OAAS,GAElB,YACI,MAAM4B,EAAa3G,KAAK+E,OAAO6B,QAC/B,IAAKD,EACD,OACJ,IAAIE,GAAW,EACf7G,KAAKwG,iBAAmB,KAChBK,IAEJA,GAAW,EACX7G,KAAKgF,SACLhF,KAAKuF,cAEToB,EAAWtB,QAAQ,CAACrF,KAAKgF,SAAUhF,KAAKwG,oBAahD,MAAMM,EACF,YAAYC,GACR/G,KAAKgH,WAAa,IAAIpC,EAAU,EAAGmC,GAEvC,UACI,OAd0DtB,EAcvCzF,KAdgD0F,OAc1C,EAdyDC,EAczC,YACrC,MAAO,CAAEc,SAAkBzG,KAAKgH,WAAWnB,UAC3C,OAAOY,GAdR,KAF4EX,OAc9C,KAZnBA,EAAIV,WAAU,SAAUC,EAASC,GAC/C,SAASS,EAAUnF,GAAS,IAAMoF,EAAKL,EAAUM,KAAKrF,IAAW,MAAOsF,GAAKZ,EAAOY,IACpF,SAASC,EAASvF,GAAS,IAAMoF,EAAKL,EAAiB,MAAE/E,IAAW,MAAOsF,GAAKZ,EAAOY,IACvF,SAASF,EAAKI,GAJlB,IAAexF,EAIawF,EAAOC,KAAOhB,EAAQe,EAAOxF,QAJ1CA,EAIyDwF,EAAOxF,MAJhDA,aAAiBkF,EAAIlF,EAAQ,IAAIkF,GAAE,SAAUT,GAAWA,EAAQzE,OAIT0F,KAAKP,EAAWI,GAClGH,GAAML,EAAYA,EAAUY,MAAMd,EAASC,GAAc,KAAKO,WANd,IAAUR,EAASC,EAAYI,EAAGH,EAmBtF,aAAaH,GACT,OAAOxF,KAAKgH,WAAWC,cAAa,IAAMzB,MAE9C,WACI,OAAOxF,KAAKgH,WAAW9B,WAG3B,UACIlF,KAAKgH,WAAWpB,UAEpB,SACI,OAAO5F,KAAKgH,WAAWE,Y,gBCnGyCC,EAAO7E,QAAoS,SAAU4D,EAAEkB,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAmE,GAAG1F,EAAE,OAAOA,EAAE0F,GAAE,GAAI,IAAIE,EAAE,IAAI1G,MAAM,uBAAuBwG,EAAE,KAAK,MAAOE,EAAEC,KAAK,mBAAoBD,EAAG,IAAIE,EAAEP,EAAEG,GAAG,CAAClF,QAAQ,IAAI8E,EAAEI,GAAG,GAAGK,KAAKD,EAAEtF,SAAQ,SAAS4D,GAAoB,OAAOqB,EAAlBH,EAAEI,GAAG,GAAGtB,IAAgBA,KAAI0B,EAAEA,EAAEtF,QAAQ4D,EAAEkB,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGlF,QAAkD,IAA1C,IAAIR,OAAE,EAA4C0F,EAAE,EAAEA,EAAEF,EAAEvF,OAAOyF,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA1b,CAA8b,CAACO,EAAE,CAAC,SAASC,EAAQZ,EAAO7E,IAC70B,SAAW0F,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOU,SAASC,eAAe,IAC7CJ,EAASK,QAAQH,EAAS,CACxBI,eAAe,IAEjBZ,EAAgB,WACdQ,EAAQhG,KAAQ6F,IAAWA,EAAS,QAEjC,GAAKN,EAAOc,mBAAiD,IAA1Bd,EAAOe,eAO/Cd,EADS,aAAcD,GAAU,uBAAwBA,EAAOU,SAASM,cAAc,UACvE,WAId,IAAIC,EAAWjB,EAAOU,SAASM,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BV,IAEAS,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,MAEbjB,EAAOU,SAASW,gBAAgBC,YAAYL,IAG9B,WACdM,WAAWf,EAAU,QAvBwD,CAC/E,IAAIgB,EAAU,IAAIxB,EAAOe,eACzBS,EAAQC,MAAMC,UAAYlB,EAC1BP,EAAgB,WACduB,EAAQG,MAAMC,YAAY,IAyBhC,IAAIC,EAAQ,GAEZ,SAASrB,IAEP,IAAI1G,EAAGgI,EADP5B,GAAW,EAGX,IADA,IAAI6B,EAAMF,EAAM9H,OACTgI,GAAK,CAIV,IAHAD,EAAWD,EACXA,EAAQ,GACR/H,GAAK,IACIA,EAAIiI,GACXD,EAAShI,KAEXiI,EAAMF,EAAM9H,OAEdmG,GAAW,EAGbf,EAAO7E,QACP,SAAmB0H,GACQ,IAArBH,EAAMnI,KAAKsI,IAAgB9B,GAC7BD,OAIDJ,KAAK7H,UAAuB,IAAX,EAAAiK,EAAyB,EAAAA,EAAyB,oBAATC,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAAS,KAClI,IAAIC,EAAE,CAAC,SAASrC,EAAQZ,EAAO7E,GACjC,aACA,IAAI+H,EAAYtC,EAAQ,GAGxB,SAASuC,KAET,IAAIC,EAAW,GAEXC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAAStF,EAAQuF,GACf,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,+BAEtB5K,KAAK6K,MAAQH,EACb1K,KAAK6J,MAAQ,GACb7J,KAAK8K,aAAU,EACXH,IAAaL,GACfS,EAAsB/K,KAAM2K,GAsBhC,SAASK,EAAUC,EAASC,EAAaC,GACvCnL,KAAKiL,QAAUA,EACY,mBAAhBC,IACTlL,KAAKkL,YAAcA,EACnBlL,KAAKoL,cAAgBpL,KAAKqL,oBAEF,mBAAfF,IACTnL,KAAKmL,WAAaA,EAClBnL,KAAKsL,aAAetL,KAAKuL,mBAgB7B,SAASC,EAAOP,EAASQ,EAAM7K,GAC7ByJ,GAAU,WACR,IAAIqB,EACJ,IACEA,EAAcD,EAAK7K,GACnB,MAAOsF,GACP,OAAOqE,EAASjF,OAAO2F,EAAS/E,GAE9BwF,IAAgBT,EAClBV,EAASjF,OAAO2F,EAAS,IAAIL,UAAU,uCAEvCL,EAASlF,QAAQ4F,EAASS,MAoChC,SAASC,EAAQC,GAEf,IAAItF,EAAOsF,GAAOA,EAAItF,KACtB,GAAIsF,IAAuB,iBAARA,GAAmC,mBAARA,IAAuC,mBAATtF,EAC1E,OAAO,WACLA,EAAKC,MAAMqF,EAAKC,YAKtB,SAASd,EAAsBb,EAAM4B,GAEnC,IAAIxD,GAAS,EACb,SAASyD,EAAQnL,GACX0H,IAGJA,GAAS,EACTiC,EAASjF,OAAO4E,EAAMtJ,IAGxB,SAASoL,EAAUpL,GACb0H,IAGJA,GAAS,EACTiC,EAASlF,QAAQ6E,EAAMtJ,IAOzB,IAAIwF,EAAS6F,GAJb,WACEH,EAASE,EAAWD,MAIA,UAAlB3F,EAAO8F,QACTH,EAAQ3F,EAAOxF,OAInB,SAASqL,EAASR,EAAM7K,GACtB,IAAIuL,EAAM,GACV,IACEA,EAAIvL,MAAQ6K,EAAK7K,GACjBuL,EAAID,OAAS,UACb,MAAOhG,GACPiG,EAAID,OAAS,QACbC,EAAIvL,MAAQsF,EAEd,OAAOiG,EAvJThF,EAAO7E,QAAU8C,EAcjBA,EAAQgH,UAAiB,MAAI,SAAUjB,GACrC,OAAOnL,KAAKsG,KAAK,KAAM6E,IAEzB/F,EAAQgH,UAAU9F,KAAO,SAAU4E,EAAaC,GAC9C,GAA2B,mBAAhBD,GAA8BlL,KAAK6K,QAAUJ,GAChC,mBAAfU,GAA6BnL,KAAK6K,QAAUL,EACnD,OAAOxK,KAET,IAAIiL,EAAU,IAAIjL,KAAKqM,YAAY/B,GAQnC,OAPItK,KAAK6K,QAAUH,EAEjBc,EAAOP,EADQjL,KAAK6K,QAAUJ,EAAYS,EAAcC,EAC9BnL,KAAK8K,SAE/B9K,KAAK6J,MAAMnI,KAAK,IAAIsJ,EAAUC,EAASC,EAAaC,IAG/CF,GAaTD,EAAUoB,UAAUhB,cAAgB,SAAUxK,GAC5C2J,EAASlF,QAAQrF,KAAKiL,QAASrK,IAEjCoK,EAAUoB,UAAUf,mBAAqB,SAAUzK,GACjD4K,EAAOxL,KAAKiL,QAASjL,KAAKkL,YAAatK,IAEzCoK,EAAUoB,UAAUd,aAAe,SAAU1K,GAC3C2J,EAASjF,OAAOtF,KAAKiL,QAASrK,IAEhCoK,EAAUoB,UAAUb,kBAAoB,SAAU3K,GAChD4K,EAAOxL,KAAKiL,QAASjL,KAAKmL,WAAYvK,IAmBxC2J,EAASlF,QAAU,SAAU6E,EAAMtJ,GACjC,IAAIwF,EAAS6F,EAASN,EAAS/K,GAC/B,GAAsB,UAAlBwF,EAAO8F,OACT,OAAO3B,EAASjF,OAAO4E,EAAM9D,EAAOxF,OAEtC,IAAIkL,EAAW1F,EAAOxF,MAEtB,GAAIkL,EACFf,EAAsBb,EAAM4B,OACvB,CACL5B,EAAKW,MAAQJ,EACbP,EAAKY,QAAUlK,EAGf,IAFA,IAAIkB,GAAK,EACLiI,EAAMG,EAAKL,MAAM9H,SACZD,EAAIiI,GACXG,EAAKL,MAAM/H,GAAGsJ,cAAcxK,GAGhC,OAAOsJ,GAETK,EAASjF,OAAS,SAAU4E,EAAMoC,GAChCpC,EAAKW,MAAQL,EACbN,EAAKY,QAAUwB,EAGf,IAFA,IAAIxK,GAAK,EACLiI,EAAMG,EAAKL,MAAM9H,SACZD,EAAIiI,GACXG,EAAKL,MAAM/H,GAAGwJ,aAAagB,GAE7B,OAAOpC,GAsDT9E,EAAQC,QACR,SAAiBzE,GACf,OAAIA,aAAiBZ,KACZY,EAEF2J,EAASlF,QAAQ,IAAIrF,KAAKsK,GAAW1J,IAG9CwE,EAAQE,OACR,SAAgBiH,GACd,IAAItB,EAAU,IAAIjL,KAAKsK,GACvB,OAAOC,EAASjF,OAAO2F,EAASsB,IAGlCnH,EAAQoH,IACR,SAAaC,GACX,IAAIvC,EAAOlK,KACX,GAAiD,mBAA7CoC,OAAOgK,UAAUM,SAAS7E,KAAK4E,GACjC,OAAOzM,KAAKsF,OAAO,IAAIsF,UAAU,qBAGnC,IAAIb,EAAM0C,EAAS1K,OACfuG,GAAS,EACb,IAAKyB,EACH,OAAO/J,KAAKqF,QAAQ,IAQtB,IALA,IAAI7E,EAAS,IAAImM,MAAM5C,GACnB6C,EAAW,EACX9K,GAAK,EACLmJ,EAAU,IAAIjL,KAAKsK,KAEdxI,EAAIiI,GACX8C,EAAYJ,EAAS3K,GAAIA,GAE3B,OAAOmJ,EACP,SAAS4B,EAAYjM,EAAOkB,GAC1BoI,EAAK7E,QAAQzE,GAAO0F,MAMpB,SAAwBwG,GACtBtM,EAAOsB,GAAKgL,IACNF,IAAa7C,GAAQzB,IACzBA,GAAS,EACTiC,EAASlF,QAAQ4F,EAASzK,OAVW,SAAU8L,GAC5ChE,IACHA,GAAS,EACTiC,EAASjF,OAAO2F,EAASqB,SAajClH,EAAQ2H,KACR,SAAcN,GACZ,IAAIvC,EAAOlK,KACX,GAAiD,mBAA7CoC,OAAOgK,UAAUM,SAAS7E,KAAK4E,GACjC,OAAOzM,KAAKsF,OAAO,IAAIsF,UAAU,qBAGnC,IAakBhK,EAbdmJ,EAAM0C,EAAS1K,OACfuG,GAAS,EACb,IAAKyB,EACH,OAAO/J,KAAKqF,QAAQ,IAMtB,IAHA,IAAIvD,GAAK,EACLmJ,EAAU,IAAIjL,KAAKsK,KAEdxI,EAAIiI,GAIKnJ,EAHP6L,EAAS3K,GAIlBoI,EAAK7E,QAAQzE,GAAO0F,MAAK,SAAU0G,GAC5B1E,IACHA,GAAS,EACTiC,EAASlF,QAAQ4F,EAAS+B,OAE3B,SAAUV,GACNhE,IACHA,GAAS,EACTiC,EAASjF,OAAO2F,EAASqB,OAV/B,OAAOrB,IAgBP,CAAC,EAAI,IAAIgC,EAAE,CAAC,SAASlF,EAAQZ,EAAO7E,IACtC,SAAW0F,GACX,aAC8B,mBAAnBA,EAAO5C,UAChB4C,EAAO5C,QAAU2C,EAAQ,MAGxBF,KAAK7H,UAAuB,IAAX,EAAAiK,EAAyB,EAAAA,EAAyB,oBAATC,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAAS,KAClI,CAAC,EAAI,IAAI+C,EAAE,CAAC,SAASnF,EAAQZ,EAAO7E,GACtC,aAEA,IAAI6K,EAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAUzB,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,mBAAXwB,QAAyBxB,EAAIS,cAAgBe,QAAUxB,IAAQwB,OAAOhB,UAAY,gBAAkBR,GA2BtQ,IAAI0B,EAvBJ,WAEI,IACI,GAAyB,oBAAdC,UACP,OAAOA,UAEX,GAA+B,oBAApBC,gBACP,OAAOA,gBAEX,GAA4B,oBAAjBC,aACP,OAAOA,aAEX,GAA0B,oBAAfC,WACP,OAAOA,WAEX,GAA2B,oBAAhBC,YACP,OAAOA,YAEb,MAAOzH,GACL,QAIE0H,GAwCV,SAASC,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,GAC3B,IACI,OAAO,IAAIC,KAAKF,EAAOC,GACzB,MAAO7H,GACL,GAAe,cAAXA,EAAE+H,KACF,MAAM/H,EAIV,IAFA,IACIgI,EAAU,IADuB,oBAAhBC,YAA8BA,YAAuC,oBAAlBC,cAAgCA,cAA0C,oBAAnBC,eAAiCA,eAAiBC,mBAExKxM,EAAI,EAAGA,EAAIgM,EAAM/L,OAAQD,GAAK,EACnCoM,EAAQK,OAAOT,EAAMhM,IAEzB,OAAOoM,EAAQM,QAAQT,EAAW7M,OAMnB,oBAAZkE,SAGP2C,EAAQ,GAEZ,IAAI0G,EAAYrJ,QAEhB,SAASsJ,EAAgBzD,EAASzF,GAC1BA,GACAyF,EAAQ3E,MAAK,SAAUF,GACnBZ,EAAS,KAAMY,MAChB,SAAUkG,GACT9G,EAAS8G,MAKrB,SAASqC,EAAoB1D,EAASzF,EAAUoJ,GACpB,mBAAbpJ,GACPyF,EAAQ3E,KAAKd,GAGY,mBAAlBoJ,GACP3D,EAAe,MAAE2D,GAIzB,SAASC,EAAapO,GAOlB,MALmB,iBAARA,IACPqO,QAAQC,KAAKtO,EAAM,2CACnBA,EAAMuO,OAAOvO,IAGVA,EAGX,SAASwO,IACL,GAAIpD,UAAU9J,QAAqD,mBAApC8J,UAAUA,UAAU9J,OAAS,GACxD,OAAO8J,UAAUA,UAAU9J,OAAS,GAO5C,IAAImN,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,GACb1C,EAAWtK,OAAOgK,UAAUM,SAG5B2C,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAIzN,EAASyN,EAAIzN,OACba,EAAM,IAAIyB,YAAYtC,GACtB0N,EAAM,IAAIvM,WAAWN,GAChBd,EAAI,EAAGA,EAAIC,EAAQD,IACxB2N,EAAI3N,GAAK0N,EAAIE,WAAW5N,GAE5B,OAAOc,EA4CX,SAAS+M,EAAkBrC,GACvB,MAA6B,kBAAlB6B,EACAV,EAAUpJ,QAAQ8J,GA5BjC,SAAyC7B,GACrC,OAAO,IAAImB,GAAU,SAAUpJ,GAC3B,IAAIuK,EAAMtC,EAAIuC,YAAYX,EAA2BI,GACjDQ,EAAOjC,EAAW,CAAC,KACvB+B,EAAIG,YAAYb,GAA2Bc,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAU/J,GAGpBA,EAAEgK,iBACFhK,EAAEiK,kBACF9K,GAAQ,IAGZuK,EAAIQ,WAAa,WACb,IAAIC,EAAgBC,UAAUC,UAAUC,MAAM,iBAC1CC,EAAcH,UAAUC,UAAUC,MAAM,UAG5CnL,EAAQoL,IAAgBJ,GAAiBK,SAASL,EAAc,GAAI,KAAO,QAEzE,OAAE,WACR,OAAO,KAQJM,CAAgCrD,GAAKhH,MAAK,SAAU1F,GAEvD,OADAuO,EAAgBvO,KAKxB,SAASgQ,EAAgBC,GACrB,IAAIC,EAAY1B,EAAWyB,EAAO5C,MAG9B8C,EAAoB,GAExBA,EAAkB9F,QAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GACzDyL,EAAkB1L,QAAUA,EAC5B0L,EAAkBzL,OAASA,KAI/BwL,EAAUE,mBAAmBtP,KAAKqP,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQ3K,MAAK,WACvC,OAAOyK,EAAkB9F,WAH7B6F,EAAUG,QAAUF,EAAkB9F,QAQ9C,SAASiG,EAAkBL,GACvB,IAGIE,EAHY3B,EAAWyB,EAAO5C,MAGA+C,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB1L,UACX0L,EAAkB9F,QAIjC,SAASmG,EAAiBP,EAAQQ,GAC9B,IAGIN,EAHY3B,EAAWyB,EAAO5C,MAGA+C,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkBzL,OAAO+L,GAClBN,EAAkB9F,QAIjC,SAASqG,EAAeT,EAAQU,GAC5B,OAAO,IAAI9C,GAAU,SAAUpJ,EAASC,GAGpC,GAFA8J,EAAWyB,EAAO5C,MAAQmB,EAAWyB,EAAO5C,OAoNzC,CAEHuD,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IA1NhBH,EAAOY,GAAI,CACX,IAAIF,EAIA,OAAOlM,EAAQwL,EAAOY,IAHtBb,EAAgBC,GAChBA,EAAOY,GAAGC,QAMlB,IAAIC,EAAS,CAACd,EAAO5C,MAEjBsD,GACAI,EAAOjQ,KAAKmP,EAAOe,SAGvB,IAAIC,EAAUvE,EAAIwE,KAAKvL,MAAM+G,EAAKqE,GAE9BJ,IACAM,EAAQE,gBAAkB,SAAU7L,GAChC,IAAIuL,EAAKI,EAAQzL,OACjB,IACIqL,EAAGO,kBAAkBnB,EAAOoB,WACxB/L,EAAEgM,YAAc,GAEhBT,EAAGO,kBAAkB9C,GAE3B,MAAOiD,GACL,GAAgB,oBAAZA,EAAGlE,KAGH,MAAMkE,EAFNrD,QAAQC,KAAK,iBAAmB8B,EAAO5C,KAA1B,oCAA4E/H,EAAEgM,WAAa,eAAiBhM,EAAEkM,WAAa,sBAAwBvB,EAAOoB,UAAY,wBAQnMJ,EAAQQ,QAAU,SAAUnM,GACxBA,EAAEgK,iBACF5K,EAAOuM,EAAQvF,QAGnBuF,EAAQS,UAAY,WAChBjN,EAAQwM,EAAQzL,QAChB8K,EAAkBL,OAK9B,SAAS0B,EAAuB1B,GAC5B,OAAOS,EAAeT,GAAQ,GAGlC,SAAS2B,EAAuB3B,GAC5B,OAAOS,EAAeT,GAAQ,GAGlC,SAAS4B,EAAiB5B,EAAQ6B,GAC9B,IAAK7B,EAAOY,GACR,OAAO,EAGX,IAAIkB,GAAc9B,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOoB,WACzDa,EAAcjC,EAAOe,QAAUf,EAAOY,GAAGG,QACzCmB,EAAYlC,EAAOe,QAAUf,EAAOY,GAAGG,QAY3C,GAVIkB,IAGIjC,EAAOe,UAAYc,GACnB5D,QAAQC,KAAK,iBAAmB8B,EAAO5C,KAA1B,uCAA8E4C,EAAOY,GAAGG,QAAU,eAAiBf,EAAOe,QAAU,KAGrJf,EAAOe,QAAUf,EAAOY,GAAGG,SAG3BmB,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAanC,EAAOY,GAAGG,QAAU,EACjCoB,EAAanC,EAAOe,UACpBf,EAAOe,QAAUoB,GAIzB,OAAO,EAGX,OAAO,EAqBX,SAASC,EAAYC,GAEjB,OAAOrF,EAAW,CADF0B,EAAwB4D,KAAKD,EAAYzQ,QAC1B,CAAEvB,KAAMgS,EAAYhS,OAIvD,SAASkS,EAAexS,GACpB,OAAOA,GAASA,EAAMyS,4BAO1B,SAASC,EAAY9N,GACjB,IAAI0E,EAAOlK,KAEPiL,EAAUf,EAAKqJ,aAAajN,MAAK,WACjC,IAAIwK,EAAY1B,EAAWlF,EAAKsJ,QAAQvF,MAExC,GAAI6C,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,WAKzB,OADAtC,EAAoB1D,EAASzF,EAAUA,GAChCyF,EA2CX,SAASwI,EAAkB5C,EAAQ6C,EAAMlO,EAAUmO,QAC/B5S,IAAZ4S,IACAA,EAAU,GAGd,IACI,IAAIC,EAAK/C,EAAOY,GAAG5B,YAAYgB,EAAOoB,UAAWyB,GACjDlO,EAAS,KAAMoO,GACjB,MAAOvC,GACL,GAAIsC,EAAU,KAAO9C,EAAOY,IAAmB,sBAAbJ,EAAIpD,MAA6C,kBAAboD,EAAIpD,MACtE,OAAOQ,EAAUpJ,UAAUiB,MAAK,WAC5B,IAAKuK,EAAOY,IAAmB,kBAAbJ,EAAIpD,OAA6B4C,EAAOY,GAAGmB,iBAAiBC,SAAShC,EAAOoB,YAAcpB,EAAOe,SAAWf,EAAOY,GAAGG,QAMpI,OAJIf,EAAOY,KACPZ,EAAOe,QAAUf,EAAOY,GAAGG,QAAU,GAGlCY,EAAuB3B,MAEnCvK,MAAK,WACJ,OAzDhB,SAAuBuK,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAY1B,EAAWyB,EAAO5C,MAC9BuD,EAAUV,EAAUU,QAEf1P,EAAI,EAAGA,EAAI0P,EAAQzP,OAAQD,IAAK,CACrC,IAAI+R,EAASrC,EAAQ1P,GACjB+R,EAAOL,QAAQ/B,KACfoC,EAAOL,QAAQ/B,GAAGC,QAClBmC,EAAOL,QAAQ/B,GAAK,MAK5B,OAFAZ,EAAOY,GAAK,KAELc,EAAuB1B,GAAQvK,MAAK,SAAUmL,GAEjD,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,GAEV2B,EAAuB3B,GAE3BY,KACRnL,MAAK,SAAUmL,GAGdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B,IAAK,IAAI3P,EAAI,EAAGA,EAAI0P,EAAQzP,OAAQD,IAChC0P,EAAQ1P,GAAG0R,QAAQ/B,GAAKA,KAEtB,OAAE,SAAUJ,GAElB,MADAD,EAAiBP,EAAQQ,GACnBA,KA0BSyC,CAAcjD,GAAQvK,MAAK,WAC9BmN,EAAkB5C,EAAQ6C,EAAMlO,EAAUmO,EAAU,SAElD,MAAEnO,GAGhBA,EAAS6L,IAylBjB,IAAI0C,EAAe,CACfC,QAAS,eACTC,aAxkBJ,SAAsBlU,GAClB,IAAImK,EAAOlK,KACP6Q,EAAS,CACTY,GAAI,MAGR,GAAI1R,EACA,IAAK,IAAI+B,KAAK/B,EACV8Q,EAAO/O,GAAK/B,EAAQ+B,GAK5B,IAAIgP,EAAY1B,EAAWyB,EAAO5C,MAG7B6C,IACDA,EA/BG,CAEHU,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IAyBpB5B,EAAWyB,EAAO5C,MAAQ6C,GAI9BA,EAAUU,QAAQ9P,KAAKwI,GAGlBA,EAAKqJ,aACNrJ,EAAKqJ,WAAarJ,EAAKgK,MACvBhK,EAAKgK,MAAQZ,GAIjB,IAAIa,EAAe,GAEnB,SAASC,IAGL,OAAO3F,EAAUpJ,UAGrB,IAAK,IAAIgP,EAAI,EAAGA,EAAIvD,EAAUU,QAAQzP,OAAQsS,IAAK,CAC/C,IAAIR,EAAS/C,EAAUU,QAAQ6C,GAC3BR,IAAW3J,GAEXiK,EAAazS,KAAKmS,EAAON,aAAoB,MAAEa,IAKvD,IAAI5C,EAAUV,EAAUU,QAAQrO,MAAM,GAItC,OAAOsL,EAAUjC,IAAI2H,GAAc7N,MAAK,WAGpC,OAFAuK,EAAOY,GAAKX,EAAUW,GAEfc,EAAuB1B,MAC/BvK,MAAK,SAAUmL,GAEd,OADAZ,EAAOY,GAAKA,EACRgB,EAAiB5B,EAAQ3G,EAAKoK,eAAe1C,SAEtCY,EAAuB3B,GAE3BY,KACRnL,MAAK,SAAUmL,GACdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3BvH,EAAKsJ,QAAU3C,EAEf,IAAK,IAAIpP,EAAI,EAAGA,EAAI+P,EAAQzP,OAAQN,IAAK,CACrC,IAAIoS,EAASrC,EAAQ/P,GACjBoS,IAAW3J,IAEX2J,EAAOL,QAAQ/B,GAAKZ,EAAOY,GAC3BoC,EAAOL,QAAQ5B,QAAUf,EAAOe,cAggB5C2C,SArhCJ,WACI,IAGI,IAAKjH,IAAQA,EAAIwE,KACb,OAAO,EAMX,IAAI0C,EAAmC,oBAAjBC,cAAgC,4BAA4BC,KAAKpE,UAAUC,aAAe,SAASmE,KAAKpE,UAAUC,aAAe,aAAamE,KAAKpE,UAAUqE,UAE/KC,EAA4B,mBAAVC,QAAsE,IAA9CA,MAAMnI,WAAWoI,QAAQ,gBAQvE,QAASN,GAAYI,IAAkC,oBAAdrH,WAKlB,oBAAhBwH,YACT,MAAO7O,GACL,OAAO,GAy/BD8O,GACVC,QAjdJ,SAAiB5H,EAAU7H,GACvB,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IACI6D,EADQrF,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WACjCkD,aACZC,EAAkB,EAEtBF,EAAI5C,UAAY,WACZ,IAAI+C,EAASH,EAAI9O,OAEjB,GAAIiP,EAAQ,CACR,IAAIzU,EAAQyU,EAAOzU,MACfwS,EAAexS,KACfA,EAAQqS,EAAYrS,IAExB,IAAIwF,EAASiH,EAASzM,EAAOyU,EAAO5U,IAAK2U,UAK1B,IAAXhP,EACAf,EAAQe,GAERiP,EAAiB,gBAGrBhQ,KAIR6P,EAAI7C,QAAU,WACV/M,EAAO4P,EAAI5I,QAEjB,MAAOpG,GACLZ,EAAOY,UAGT,MAAEZ,MAKhB,OAFAoJ,EAAgBzD,EAASzF,GAElByF,GAgaPqK,QA5fJ,SAAiB7U,EAAK+E,GAClB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IACI6D,EADQrF,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WACjCnR,IAAIL,GAEpByU,EAAI5C,UAAY,WACZ,IAAI1R,EAAQsU,EAAI9O,YACFrF,IAAVH,IACAA,EAAQ,MAERwS,EAAexS,KACfA,EAAQqS,EAAYrS,IAExByE,EAAQzE,IAGZsU,EAAI7C,QAAU,WACV/M,EAAO4P,EAAI5I,QAEjB,MAAOpG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAudPsK,QA9ZJ,SAAiB9U,EAAKG,EAAO4E,GACzB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C,IAAIuL,EACJ3G,EAAKgK,QAAQ5N,MAAK,WAEd,OADAuK,EAAS3G,EAAKsJ,QACe,kBAAzB9G,EAAS7E,KAAKjH,GACP+O,EAAkBkB,EAAOY,IAAInL,MAAK,SAAUkP,GAC/C,OAAIA,EACO5U,GA7TVkP,EA+TkBlP,EA9T5B,IAAI6N,GAAU,SAAUpJ,EAASC,GACpC,IAAImQ,EAAS,IAAIC,WACjBD,EAAOpD,QAAU/M,EACjBmQ,EAAOE,UAAY,SAAUzP,GACzB,IAAI0P,EAASC,KAAK3P,EAAE4P,OAAO1P,QAAU,IACrCf,EAAQ,CACJgO,6BAA6B,EAC7B5Q,KAAMmT,EACN1U,KAAM4O,EAAK5O,QAGnBuU,EAAOM,mBAAmBjG,OAZlC,IAAqBA,KAkUFlP,KACR0F,MAAK,SAAU1F,GACd6S,EAAkBvJ,EAAKsJ,QAASlE,GAAY,SAAU+B,EAAKxB,GACvD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IAAI2E,EAAQnG,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WAMnC,OAAVrR,IACAA,OAAQG,GAGZ,IAAImU,EAAMc,EAAMhG,IAAIpP,EAAOH,GAE3BoP,EAAYO,WAAa,gBAOPrP,IAAVH,IACAA,EAAQ,MAGZyE,EAAQzE,IAEZiP,EAAYI,QAAUJ,EAAYwC,QAAU,WACxC,IAAIhB,EAAM6D,EAAI5I,MAAQ4I,EAAI5I,MAAQ4I,EAAIrF,YAAYvD,MAClDhH,EAAO+L,IAEb,MAAOnL,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAiWPgL,WA9VJ,SAAoBxV,EAAK+E,GACrB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASlE,GAAY,SAAU+B,EAAKxB,GACvD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IAMI6D,EANQrF,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WAMzB,OAAExR,GAC1BoP,EAAYO,WAAa,WACrB/K,KAGJwK,EAAYwC,QAAU,WAClB/M,EAAO4P,EAAI5I,QAKfuD,EAAYI,QAAU,WAClB,IAAIoB,EAAM6D,EAAI5I,MAAQ4I,EAAI5I,MAAQ4I,EAAIrF,YAAYvD,MAClDhH,EAAO+L,IAEb,MAAOnL,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAqTPhJ,MAlTJ,SAAeuD,GACX,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASlE,GAAY,SAAU+B,EAAKxB,GACvD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IACI6D,EADQrF,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WACjChQ,QAEhB4N,EAAYO,WAAa,WACrB/K,KAGJwK,EAAYI,QAAUJ,EAAYwC,QAAU,WACxC,IAAIhB,EAAM6D,EAAI5I,MAAQ4I,EAAI5I,MAAQ4I,EAAIrF,YAAYvD,MAClDhH,EAAO+L,IAEb,MAAOnL,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAqRPlJ,OAlRJ,SAAgByD,GACZ,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IACI6D,EADQrF,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WACjCiE,QAEhBhB,EAAI5C,UAAY,WACZjN,EAAQ6P,EAAI9O,SAGhB8O,EAAI7C,QAAU,WACV/M,EAAO4P,EAAI5I,QAEjB,MAAOpG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAsPPxK,IAnPJ,SAAa4G,EAAG7B,GACZ,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GACvC+B,EAAI,EACJhC,EAAQ,MAKZ6E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IAAI2E,EAAQnG,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WAC7CkE,GAAW,EACXjB,EAAMc,EAAMI,gBAEhBlB,EAAI5C,UAAY,WACZ,IAAI+C,EAASH,EAAI9O,OACZiP,EAOK,IAANhO,GAKK8O,EAFL9Q,EAAQgQ,EAAO5U,MAKX0V,GAAW,EACXd,EAAOgB,QAAQhP,IAdnBhC,EAAQ,OAsBhB6P,EAAI7C,QAAU,WACV/M,EAAO4P,EAAI5I,QAEjB,MAAOpG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GA0LPpJ,KAvLJ,SAAc2D,GACV,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACdmN,EAAkBvJ,EAAKsJ,QAASnE,GAAW,SAAUgC,EAAKxB,GACtD,GAAIwB,EACA,OAAO/L,EAAO+L,GAGlB,IACI,IACI6D,EADQrF,EAAYE,YAAY7F,EAAKsJ,QAAQvB,WACjCmE,gBACZvU,EAAO,GAEXqT,EAAI5C,UAAY,WACZ,IAAI+C,EAASH,EAAI9O,OAEZiP,GAKLxT,EAAKH,KAAK2T,EAAO5U,KACjB4U,EAAiB,YALbhQ,EAAQxD,IAQhBqT,EAAI7C,QAAU,WACV/M,EAAO4P,EAAI5I,QAEjB,MAAOpG,GACLZ,EAAOY,UAGT,MAAEZ,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAkJPqL,aA/IJ,SAAsBvW,EAASyF,GAC3BA,EAAWyJ,EAAY1I,MAAMvG,KAAM6L,WAEnC,IAAI0K,EAAgBvW,KAAKwW,UACzBzW,EAA6B,mBAAZA,GAA0BA,GAAW,IACzCkO,OACTlO,EAAQkO,KAAOlO,EAAQkO,MAAQsI,EAActI,KAC7ClO,EAAQkS,UAAYlS,EAAQkS,WAAasE,EAActE,WAG3D,IACIhH,EADAf,EAAOlK,KAEX,GAAKD,EAAQkO,KAEN,CACH,IAEIwI,EAFc1W,EAAQkO,OAASsI,EAActI,MAAQ/D,EAAKsJ,QAAQ/B,GAExChD,EAAUpJ,QAAQ6E,EAAKsJ,QAAQ/B,IAAMc,EAAuBxS,GAASuG,MAAK,SAAUmL,GAC9G,IAAIX,EAAY1B,EAAWrP,EAAQkO,MAC/BuD,EAAUV,EAAUU,QACxBV,EAAUW,GAAKA,EACf,IAAK,IAAI3P,EAAI,EAAGA,EAAI0P,EAAQzP,OAAQD,IAChC0P,EAAQ1P,GAAG0R,QAAQ/B,GAAKA,EAE5B,OAAOA,KAgDPxG,EA7CClL,EAAQkS,UA6CCwE,EAAUnQ,MAAK,SAAUmL,GAC/B,GAAKA,EAAGmB,iBAAiBC,SAAS9S,EAAQkS,WAA1C,CAIA,IAAIG,EAAaX,EAAGG,QAAU,EAE9BhB,EAAgB7Q,GAEhB,IAAI+Q,EAAY1B,EAAWrP,EAAQkO,MAC/BuD,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAI5P,EAAI,EAAGA,EAAI0P,EAAQzP,OAAQD,IAAK,CACrC,IAAI+R,EAASrC,EAAQ1P,GACrB+R,EAAOL,QAAQ/B,GAAK,KACpBoC,EAAOL,QAAQ5B,QAAUQ,EAwB7B,OArBwB,IAAI3D,GAAU,SAAUpJ,EAASC,GACrD,IAAI4P,EAAM5H,EAAIwE,KAAK/R,EAAQkO,KAAMmE,GAEjC8C,EAAI7C,QAAU,SAAUhB,GACX6D,EAAI9O,OACVsL,QACHpM,EAAO+L,IAGX6D,EAAInD,gBAAkB,WACTmD,EAAI9O,OACVsQ,kBAAkB3W,EAAQkS,YAGjCiD,EAAI5C,UAAY,WACZ,IAAIb,EAAKyD,EAAI9O,OACbqL,EAAGC,QACHrM,EAAQoM,OAISnL,MAAK,SAAUmL,GACpCX,EAAUW,GAAKA,EACf,IAAK,IAAI4C,EAAI,EAAGA,EAAI7C,EAAQzP,OAAQsS,IAAK,CACrC,IAAIsC,EAAWnF,EAAQ6C,GACvBsC,EAASnD,QAAQ/B,GAAKA,EACtBP,EAAkByF,EAASnD,aAEzB,OAAE,SAAUnC,GAElB,MADCD,EAAiBrR,EAASsR,IAAQ5C,EAAUpJ,WAAkB,OAAE,eAC3DgM,SA7FJoF,EAAUnQ,MAAK,SAAUmL,GAC/Bb,EAAgB7Q,GAEhB,IAAI+Q,EAAY1B,EAAWrP,EAAQkO,MAC/BuD,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAI5P,EAAI,EAAGA,EAAI0P,EAAQzP,OAAQD,IACnB0P,EAAQ1P,GACd0R,QAAQ/B,GAAK,KAuBxB,OApBoB,IAAIhD,GAAU,SAAUpJ,EAASC,GACjD,IAAI4P,EAAM5H,EAAIsJ,eAAe7W,EAAQkO,MAErCiH,EAAI7C,QAAU6C,EAAI2B,UAAY,SAAUxF,GACpC,IAAII,EAAKyD,EAAI9O,OACTqL,GACAA,EAAGC,QAEPpM,EAAO+L,IAGX6D,EAAI5C,UAAY,WACZ,IAAIb,EAAKyD,EAAI9O,OACTqL,GACAA,EAAGC,QAEPrM,EAAQoM,OAIKnL,MAAK,SAAUmL,GAChCX,EAAUW,GAAKA,EACf,IAAK,IAAI3P,EAAI,EAAGA,EAAI0P,EAAQzP,OAAQD,IAEhCoP,EADcM,EAAQ1P,GACI0R,YAExB,OAAE,SAAUnC,GAElB,MADCD,EAAiBrR,EAASsR,IAAQ5C,EAAUpJ,WAAkB,OAAE,eAC3DgM,aAvDlBpG,EAAUwD,EAAUnJ,OAAO,qBAmH/B,OADAoJ,EAAgBzD,EAASzF,GAClByF,IAyBX,IAAI6L,EAAa,mEAGbC,EAAyB,gCAEzBC,EAAoB,YACpBC,EAA2BD,EAAkBjV,OAG7CmV,EAAmB,OACnBC,EAAY,OACZC,EAAiB,OACjBC,EAAkB,OAClBC,EAAyB,OACzBC,EAAkB,OAClBC,EAAkB,OAClBC,EAAmB,OACnBC,EAAmB,OACnBC,EAAoB,OACpBC,EAAoB,OACpBC,EAAgCZ,EAA2BC,EAAiBnV,OAE5E+V,EAAa1V,OAAOgK,UAAUM,SAElC,SAASqL,EAAeC,GAEpB,IAEIlW,EAEAmW,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiBjW,OAChCgI,EAAMiO,EAAiBjW,OAEvBuW,EAAI,EAG8C,MAAlDN,EAAiBA,EAAiBjW,OAAS,KAC3CsW,IACsD,MAAlDL,EAAiBA,EAAiBjW,OAAS,IAC3CsW,KAIR,IAAIlU,EAAS,IAAIE,YAAYgU,GACzBE,EAAQ,IAAIrV,WAAWiB,GAE3B,IAAKrC,EAAI,EAAGA,EAAIiI,EAAKjI,GAAK,EACtBmW,EAAWnB,EAAWhC,QAAQkD,EAAiBlW,IAC/CoW,EAAWpB,EAAWhC,QAAQkD,EAAiBlW,EAAI,IACnDqW,EAAWrB,EAAWhC,QAAQkD,EAAiBlW,EAAI,IACnDsW,EAAWtB,EAAWhC,QAAQkD,EAAiBlW,EAAI,IAGnDyW,EAAMD,KAAOL,GAAY,EAAIC,GAAY,EACzCK,EAAMD,MAAmB,GAAXJ,IAAkB,EAAIC,GAAY,EAChDI,EAAMD,MAAmB,EAAXH,IAAiB,EAAe,GAAXC,EAEvC,OAAOjU,EAKX,SAASqU,EAAerU,GAEpB,IAEIrC,EAFAyW,EAAQ,IAAIrV,WAAWiB,GACvBsU,EAAe,GAGnB,IAAK3W,EAAI,EAAGA,EAAIyW,EAAMxW,OAAQD,GAAK,EAE/B2W,GAAgB3B,EAAWyB,EAAMzW,IAAM,GACvC2W,GAAgB3B,GAAuB,EAAXyB,EAAMzW,KAAW,EAAIyW,EAAMzW,EAAI,IAAM,GACjE2W,GAAgB3B,GAA2B,GAAfyB,EAAMzW,EAAI,KAAY,EAAIyW,EAAMzW,EAAI,IAAM,GACtE2W,GAAgB3B,EAA0B,GAAfyB,EAAMzW,EAAI,IASzC,OANIyW,EAAMxW,OAAS,GAAM,EACrB0W,EAAeA,EAAaC,UAAU,EAAGD,EAAa1W,OAAS,GAAK,IAC7DwW,EAAMxW,OAAS,GAAM,IAC5B0W,EAAeA,EAAaC,UAAU,EAAGD,EAAa1W,OAAS,GAAK,MAGjE0W,EAyIX,IAAIE,EAAwB,CACxBpW,UApIJ,SAAmB3B,EAAO4E,GACtB,IAAIoT,EAAY,GAShB,GARIhY,IACAgY,EAAYd,EAAWjQ,KAAKjH,IAO5BA,IAAwB,yBAAdgY,GAAwChY,EAAMuD,QAA4C,yBAAlC2T,EAAWjQ,KAAKjH,EAAMuD,SAAqC,CAG7H,IAAIA,EACA0U,EAAS7B,EAETpW,aAAiByD,aACjBF,EAASvD,EACTiY,GAAU3B,IAEV/S,EAASvD,EAAMuD,OAEG,uBAAdyU,EACAC,GAAUzB,EACW,wBAAdwB,EACPC,GAAUxB,EACW,+BAAduB,EACPC,GAAUvB,EACW,wBAAdsB,EACPC,GAAUtB,EACW,yBAAdqB,EACPC,GAAUpB,EACW,wBAAdmB,EACPC,GAAUrB,EACW,yBAAdoB,EACPC,GAAUnB,EACW,0BAAdkB,EACPC,GAAUlB,EACW,0BAAdiB,EACPC,GAAUjB,EAEVpS,EAAS,IAAIxE,MAAM,wCAI3BwE,EAASqT,EAASL,EAAerU,SAC9B,GAAkB,kBAAdyU,EAA+B,CAEtC,IAAIE,EAAa,IAAIpD,WAErBoD,EAAWC,OAAS,WAEhB,IAAIC,EAtIO,uBAsIkBpY,EAAMM,KAAO,IAAMsX,EAAexY,KAAKoG,QAEpEZ,EAASwR,gBAAgCgC,IAG7CF,EAAWG,kBAAkBrY,QAE7B,IACI4E,EAAS9C,KAAKwB,UAAUtD,IAC1B,MAAOsF,GACL4I,QAAQxC,MAAM,8CAA+C1L,GAE7D4E,EAAS,KAAMU,KAqEvB1D,YAxDJ,SAAqB5B,GAIjB,GAAIA,EAAM8X,UAAU,EAAGzB,KAA8BD,EACjD,OAAOtU,KAAKC,MAAM/B,GAMtB,IAGIsY,EAHAlB,EAAmBpX,EAAM8X,UAAUb,GACnC3W,EAAON,EAAM8X,UAAUzB,EAA0BY,GAKrD,GAAI3W,IAASiW,GAAaJ,EAAuBrC,KAAKsD,GAAmB,CACrE,IAAImB,EAAUnB,EAAiBxH,MAAMuG,GACrCmC,EAAWC,EAAQ,GACnBnB,EAAmBA,EAAiBU,UAAUS,EAAQ,GAAGpX,QAE7D,IAAIoC,EAAS4T,EAAeC,GAI5B,OAAQ9W,GACJ,KAAKgW,EACD,OAAO/S,EACX,KAAKgT,EACD,OAAOtJ,EAAW,CAAC1J,GAAS,CAAEjD,KAAMgY,IACxC,KAAK9B,EACD,OAAO,IAAIgC,UAAUjV,GACzB,KAAKkT,EACD,OAAO,IAAInU,WAAWiB,GAC1B,KAAKmT,EACD,OAAO,IAAI+B,kBAAkBlV,GACjC,KAAKoT,EACD,OAAO,IAAI+B,WAAWnV,GAC1B,KAAKsT,EACD,OAAO,IAAI8B,YAAYpV,GAC3B,KAAKqT,EACD,OAAO,IAAIgC,WAAWrV,GAC1B,KAAKuT,EACD,OAAO,IAAI+B,YAAYtV,GAC3B,KAAKwT,EACD,OAAO,IAAI+B,aAAavV,GAC5B,KAAKyT,EACD,OAAO,IAAI+B,aAAaxV,GAC5B,QACI,MAAM,IAAInD,MAAM,gBAAkBE,KAO1C6W,eAAgBA,EAChBS,eAAgBA,GAapB,SAASoB,EAAcxS,EAAGyJ,EAAQrL,EAAUoJ,GACxCxH,EAAEyS,WAAW,8BAAgChJ,EAAOoB,UAAvC,+CAAwG,GAAIzM,EAAUoJ,GAyCvI,SAASkL,EAAc1S,EAAGyJ,EAAQkJ,EAAcC,EAAMxU,EAAUoJ,GAC5DxH,EAAEyS,WAAWE,EAAcC,EAAMxU,GAAU,SAAU4B,EAAGkF,GAChDA,EAAM3E,OAAS2E,EAAM2N,WACrB7S,EAAEyS,WAAW,iEAAuE,CAAChJ,EAAOoB,YAAY,SAAU7K,EAAG8S,GAC5GA,EAAQC,KAAKpY,OAOd6M,EAAcxH,EAAGkF,GAJjBsN,EAAcxS,EAAGyJ,GAAQ,WACrBzJ,EAAEyS,WAAWE,EAAcC,EAAMxU,EAAUoJ,KAC5CA,KAIRA,GAEHA,EAAcxH,EAAGkF,KAEtBsC,GA6EP,SAASwL,EAAS3Z,EAAKG,EAAO4E,EAAU6U,GACpC,IAAInQ,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,gBAIAvF,IAAVH,IACAA,EAAQ,MAIZ,IAAI0Z,EAAgB1Z,EAEhBiQ,EAAS3G,EAAKsJ,QAClB3C,EAAO0J,WAAWhY,UAAU3B,GAAO,SAAUA,EAAO0L,GAC5CA,EACAhH,EAAOgH,GAEPuE,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,0BAA4BA,EAAOoB,UAAnC,8BAAmF,CAACxR,EAAKG,IAAQ,WACtHyE,EAAQiV,MACT,SAAUlT,EAAGkF,GACZhH,EAAOgH,SAEZ,SAAUkO,GAGT,GAAIA,EAAS7S,OAAS6S,EAASC,UAAW,CAQtC,GAAIJ,EAAc,EAEd,YADAhV,EAAQ+U,EAAS7T,MAAM2D,EAAM,CAACzJ,EAAK6Z,EAAe9U,EAAU6U,EAAc,KAG9E/U,EAAOkV,aAKjB,MAAElV,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,EAmIX,SAASyP,GAAiBjJ,GACtB,OAAO,IAAIhD,GAAU,SAAUpJ,EAASC,GACpCmM,EAAG5B,aAAY,SAAUzI,GACrBA,EAAEyS,WAAW,8FAAoG,IAAI,SAAUzS,EAAG8S,GAG9H,IAFA,IAAIS,EAAa,GAER7Y,EAAI,EAAGA,EAAIoY,EAAQC,KAAKpY,OAAQD,IACrC6Y,EAAWjZ,KAAKwY,EAAQC,KAAKS,KAAK9Y,GAAGmM,MAGzC5I,EAAQ,CACJoM,GAAIA,EACJkJ,WAAYA,OAEjB,SAAUvT,EAAGkF,GACZhH,EAAOgH,SAEZ,SAAUkO,GACTlV,EAAOkV,SAwEnB,IAAIK,GAAgB,CAChB7G,QAAS,gBACTC,aArZJ,SAAwBlU,GACpB,IAAImK,EAAOlK,KACP6Q,EAAS,CACTY,GAAI,MAGR,GAAI1R,EACA,IAAK,IAAI+B,KAAK/B,EACV8Q,EAAO/O,GAA2B,iBAAf/B,EAAQ+B,GAAkB/B,EAAQ+B,GAAG4K,WAAa3M,EAAQ+B,GAIrF,IAAIgZ,EAAgB,IAAIrM,GAAU,SAAUpJ,EAASC,GAGjD,IACIuL,EAAOY,GAAKgD,aAAa5D,EAAO5C,KAAMe,OAAO6B,EAAOe,SAAUf,EAAOkK,YAAalK,EAAOlQ,MAC3F,MAAOuF,GACL,OAAOZ,EAAOY,GAIlB2K,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5BwS,EAAcxS,EAAGyJ,GAAQ,WACrB3G,EAAKsJ,QAAU3C,EACfxL,OACD,SAAU+B,EAAGkF,GACZhH,EAAOgH,QAEZhH,MAIP,OADAuL,EAAO0J,WAAa5B,EACbmC,GAqXPvG,SA1oB+B,mBAAjBE,aA2oBdQ,QAjUJ,SAAmB5H,EAAU7H,GACzB,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAElB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,iBAAmBA,EAAOoB,UAAW,IAAI,SAAU7K,EAAG8S,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACfpY,EAASoY,EAAKpY,OAETD,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC7B,IAAI8Y,EAAOT,EAAKS,KAAK9Y,GACjBsE,EAASwU,EAAKha,MAYlB,GARIwF,IACAA,EAASyK,EAAO0J,WAAW/X,YAAY4D,SAO5B,KAJfA,EAASiH,EAASjH,EAAQwU,EAAKna,IAAKqB,EAAI,IAMpC,YADAuD,EAAQe,GAKhBf,OACD,SAAU+B,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAyRPqK,QAhWJ,SAAmB7U,EAAK+E,GACpB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,iBAAmBA,EAAOoB,UAAY,yBAA0B,CAACxR,IAAM,SAAU2G,EAAG8S,GACzG,IAAI9T,EAAS8T,EAAQC,KAAKpY,OAASmY,EAAQC,KAAKS,KAAK,GAAGha,MAAQ,KAI5DwF,IACAA,EAASyK,EAAO0J,WAAW/X,YAAY4D,IAG3Cf,EAAQe,MACT,SAAUgB,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAsUPsK,QAhOJ,SAAmB9U,EAAKG,EAAO4E,GAC3B,OAAO4U,EAAS7T,MAAMvG,KAAM,CAACS,EAAKG,EAAO4E,EAAU,KAgOnDyQ,WA7NJ,SAAsBxV,EAAK+E,GACvB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,eAAiBA,EAAOoB,UAAY,iBAAkB,CAACxR,IAAM,WAClF4E,OACD,SAAU+B,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GA2MPhJ,MAtMJ,SAAiBuD,GACb,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,eAAiBA,EAAOoB,UAAW,IAAI,WAC5D5M,OACD,SAAU+B,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAsLPlJ,OAjLJ,SAAkByD,GACd,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAE5B0S,EAAc1S,EAAGyJ,EAAQ,+BAAiCA,EAAOoB,UAAW,IAAI,SAAU7K,EAAG8S,GACzF,IAAI9T,EAAS8T,EAAQC,KAAKS,KAAK,GAAGI,EAClC3V,EAAQe,MACT,SAAUgB,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GA+JPxK,IArJJ,SAAe4G,EAAG7B,GACd,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,mBAAqBA,EAAOoB,UAAY,wBAAyB,CAAC5K,EAAI,IAAI,SAAUD,EAAG8S,GAC5G,IAAI9T,EAAS8T,EAAQC,KAAKpY,OAASmY,EAAQC,KAAKS,KAAK,GAAGna,IAAM,KAC9D4E,EAAQe,MACT,SAAUgB,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GAoIPpJ,KAjIJ,SAAgB2D,GACZ,IAAI0E,EAAOlK,KAEPiL,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C4E,EAAKgK,QAAQ5N,MAAK,WACd,IAAIuK,EAAS3G,EAAKsJ,QAClB3C,EAAOY,GAAG5B,aAAY,SAAUzI,GAC5B0S,EAAc1S,EAAGyJ,EAAQ,mBAAqBA,EAAOoB,UAAW,IAAI,SAAU7K,EAAG8S,GAG7E,IAFA,IAAIrY,EAAO,GAEFC,EAAI,EAAGA,EAAIoY,EAAQC,KAAKpY,OAAQD,IACrCD,EAAKH,KAAKwY,EAAQC,KAAKS,KAAK9Y,GAAGrB,KAGnC4E,EAAQxD,MACT,SAAUuF,EAAGkF,GACZhH,EAAOgH,YAGT,MAAEhH,MAIhB,OADAoJ,EAAgBzD,EAASzF,GAClByF,GA2GPqL,aA/EJ,SAAwBvW,EAASyF,GAC7BA,EAAWyJ,EAAY1I,MAAMvG,KAAM6L,WAEnC,IAAI0K,EAAgBvW,KAAKwW,UACzBzW,EAA6B,mBAAZA,GAA0BA,GAAW,IACzCkO,OACTlO,EAAQkO,KAAOlO,EAAQkO,MAAQsI,EAActI,KAC7ClO,EAAQkS,UAAYlS,EAAQkS,WAAasE,EAActE,WAG3D,IACIhH,EADAf,EAAOlK,KAsDX,OADA0O,EAhDIzD,EAHClL,EAAQkO,KAGC,IAAIQ,GAAU,SAAUpJ,GAC9B,IAAIoM,EAGAA,EAFA1R,EAAQkO,OAASsI,EAActI,KAE1B/D,EAAKsJ,QAAQ/B,GAEbgD,aAAa1U,EAAQkO,KAAM,GAAI,GAAI,GAGvClO,EAAQkS,UAIT5M,EAAQ,CACJoM,GAAIA,EACJkJ,WAAY,CAAC5a,EAAQkS,aAJzB5M,EAAQqV,GAAiBjJ,OAO9BnL,MAAK,SAAU2U,GACd,OAAO,IAAIxM,GAAU,SAAUpJ,EAASC,GACpC2V,EAAcxJ,GAAG5B,aAAY,SAAUzI,GACnC,SAAS8T,EAAUjJ,GACf,OAAO,IAAIxD,GAAU,SAAUpJ,EAASC,GACpC8B,EAAEyS,WAAW,wBAA0B5H,EAAW,IAAI,WAClD5M,OACD,SAAU+B,EAAGkF,GACZhH,EAAOgH,SAMnB,IADA,IAAI6O,EAAa,GACRrZ,EAAI,EAAGiI,EAAMkR,EAAcN,WAAW5Y,OAAQD,EAAIiI,EAAKjI,IAC5DqZ,EAAWzZ,KAAKwZ,EAAUD,EAAcN,WAAW7Y,KAGvD2M,EAAUjC,IAAI2O,GAAY7U,MAAK,WAC3BjB,OACM,OAAE,SAAUa,GAClBZ,EAAOY,SAEZ,SAAUsU,GACTlV,EAAOkV,YA5CT/L,EAAUnJ,OAAO,qBAkDNE,GAClByF,IA4BX,SAASmQ,GAAcrb,EAASsb,GAC5B,IAAIC,EAAYvb,EAAQkO,KAAO,IAK/B,OAHIlO,EAAQkS,YAAcoJ,EAAcpJ,YACpCqJ,GAAavb,EAAQkS,UAAY,KAE9BqJ,EAqBX,SAASC,KACL,OAlBJ,WACI,IAAIC,EAAsB,4BAE1B,IAII,OAHAC,aAAalG,QAAQiG,GAAqB,GAC1CC,aAAaxF,WAAWuF,IAEjB,EACT,MAAOtV,GACL,OAAO,GASHwV,IAA+BD,aAAa1Z,OAAS,EA6QjE,IAAI4Z,GAAsB,CACtB3H,QAAS,sBACTC,aA3QJ,SAAwBlU,GACpB,IACI8Q,EAAS,GACb,GAAI9Q,EACA,IAAK,IAAI+B,KAAK/B,EACV8Q,EAAO/O,GAAK/B,EAAQ+B,GAM5B,OAFA+O,EAAOyK,UAAYF,GAAcrb,EARtBC,KAQoCsU,gBAE1CiH,MAVMvb,KAcNwT,QAAU3C,EACfA,EAAO0J,WAAa5B,EAEblK,EAAUpJ,WANNoJ,EAAUnJ,UAgQrBiP,SAtTJ,WACI,IACI,MAA+B,oBAAjBkH,cAAgC,YAAaA,gBAEzDA,aAAalG,QACjB,MAAOrP,GACL,OAAO,GAgTD0V,GACV3G,QAxMJ,SAAmB5H,EAAU7H,GACzB,IAAI0E,EAAOlK,KAEPiL,EAAUf,EAAKgK,QAAQ5N,MAAK,WAc5B,IAbA,IAAIuK,EAAS3G,EAAKsJ,QACd8H,EAAYzK,EAAOyK,UACnBO,EAAkBP,EAAUvZ,OAC5BA,EAAS0Z,aAAa1Z,OAQtBqT,EAAkB,EAEbtT,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC7B,IAAIrB,EAAMgb,aAAahb,IAAIqB,GAC3B,GAA+B,IAA3BrB,EAAIqU,QAAQwG,GAAhB,CAGA,IAAI1a,EAAQ6a,aAAanG,QAAQ7U,GAYjC,GANIG,IACAA,EAAQiQ,EAAO0J,WAAW/X,YAAY5B,SAK5B,KAFdA,EAAQyM,EAASzM,EAAOH,EAAIiY,UAAUmD,GAAkBzG,MAGpD,OAAOxU,OAMnB,OADA8N,EAAgBzD,EAASzF,GAClByF,GAgKPqK,QAlOJ,SAAmB7U,EAAK+E,GACpB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAUf,EAAKgK,QAAQ5N,MAAK,WAC5B,IAAIuK,EAAS3G,EAAKsJ,QACdpN,EAASqV,aAAanG,QAAQzE,EAAOyK,UAAY7a,GAUrD,OAJI2F,IACAA,EAASyK,EAAO0J,WAAW/X,YAAY4D,IAGpCA,KAIX,OADAsI,EAAgBzD,EAASzF,GAClByF,GA8MPsK,QAnFJ,SAAmB9U,EAAKG,EAAO4E,GAC3B,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAUf,EAAKgK,QAAQ5N,MAAK,gBAGdvF,IAAVH,IACAA,EAAQ,MAIZ,IAAI0Z,EAAgB1Z,EAEpB,OAAO,IAAI6N,GAAU,SAAUpJ,EAASC,GACpC,IAAIuL,EAAS3G,EAAKsJ,QAClB3C,EAAO0J,WAAWhY,UAAU3B,GAAO,SAAUA,EAAO0L,GAChD,GAAIA,EACAhH,EAAOgH,QAEP,IACImP,aAAalG,QAAQ1E,EAAOyK,UAAY7a,EAAKG,GAC7CyE,EAAQiV,GACV,MAAOpU,GAGU,uBAAXA,EAAE+H,MAA4C,+BAAX/H,EAAE+H,MACrC3I,EAAOY,GAEXZ,EAAOY,aAQ3B,OADAwI,EAAgBzD,EAASzF,GAClByF,GA8CPgL,WAtGJ,SAAsBxV,EAAK+E,GACvB,IAAI0E,EAAOlK,KAEXS,EAAMoO,EAAapO,GAEnB,IAAIwK,EAAUf,EAAKgK,QAAQ5N,MAAK,WAC5B,IAAIuK,EAAS3G,EAAKsJ,QAClBiI,aAAaxF,WAAWpF,EAAOyK,UAAY7a,MAI/C,OADAiO,EAAgBzD,EAASzF,GAClByF,GA4FPhJ,MA1PJ,SAAiBuD,GACb,IAAI0E,EAAOlK,KACPiL,EAAUf,EAAKgK,QAAQ5N,MAAK,WAG5B,IAFA,IAAIgV,EAAYpR,EAAKsJ,QAAQ8H,UAEpBxZ,EAAI2Z,aAAa1Z,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC/C,IAAIrB,EAAMgb,aAAahb,IAAIqB,GAEI,IAA3BrB,EAAIqU,QAAQwG,IACZG,aAAaxF,WAAWxV,OAMpC,OADAiO,EAAgBzD,EAASzF,GAClByF,GA4OPlJ,OAnHJ,SAAkByD,GACd,IACIyF,EADOjL,KACQ6B,OAAOyE,MAAK,SAAUzE,GACrC,OAAOA,EAAKE,UAIhB,OADA2M,EAAgBzD,EAASzF,GAClByF,GA6GPxK,IAjKJ,SAAe4G,EAAG7B,GACd,IAAI0E,EAAOlK,KACPiL,EAAUf,EAAKgK,QAAQ5N,MAAK,WAC5B,IACIF,EADAyK,EAAS3G,EAAKsJ,QAElB,IACIpN,EAASqV,aAAahb,IAAI4G,GAC5B,MAAOiF,GACLlG,EAAS,KAQb,OAJIA,IACAA,EAASA,EAAOsS,UAAU7H,EAAOyK,UAAUvZ,SAGxCqE,KAIX,OADAsI,EAAgBzD,EAASzF,GAClByF,GA8IPpJ,KA3IJ,SAAgB2D,GACZ,IAAI0E,EAAOlK,KACPiL,EAAUf,EAAKgK,QAAQ5N,MAAK,WAK5B,IAJA,IAAIuK,EAAS3G,EAAKsJ,QACdzR,EAAS0Z,aAAa1Z,OACtBF,EAAO,GAEFC,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC7B,IAAIga,EAAUL,aAAahb,IAAIqB,GACW,IAAtCga,EAAQhH,QAAQjE,EAAOyK,YACvBzZ,EAAKH,KAAKoa,EAAQpD,UAAU7H,EAAOyK,UAAUvZ,SAIrD,OAAOF,KAIX,OADA6M,EAAgBzD,EAASzF,GAClByF,GA0HPqL,aAhDJ,SAAwBvW,EAASyF,GAI7B,GAHAA,EAAWyJ,EAAY1I,MAAMvG,KAAM6L,aAEnC9L,EAA6B,mBAAZA,GAA0BA,GAAW,IACzCkO,KAAM,CACf,IAAIsI,EAAgBvW,KAAKwW,SACzBzW,EAAQkO,KAAOlO,EAAQkO,MAAQsI,EAActI,KAC7ClO,EAAQkS,UAAYlS,EAAQkS,WAAasE,EAActE,UAG3D,IACIhH,EADAf,EAAOlK,KAuBX,OADA0O,EAjBIzD,EAHClL,EAAQkO,KAGC,IAAIQ,GAAU,SAAUpJ,GACzBtF,EAAQkS,UAGT5M,EAAQ+V,GAAcrb,EAASmK,EAAKoK,iBAFpCjP,EAAQtF,EAAQkO,KAAO,QAI5B3H,MAAK,SAAUgV,GACd,IAAK,IAAIxZ,EAAI2Z,aAAa1Z,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC/C,IAAIrB,EAAMgb,aAAahb,IAAIqB,GAEI,IAA3BrB,EAAIqU,QAAQwG,IACZG,aAAaxF,WAAWxV,OAb1BgO,EAAUnJ,OAAO,qBAmBNE,GAClByF,IAsBP8Q,GAAW,SAAkBC,EAAOC,GAGpC,IAFA,IAAIlS,EAAMiS,EAAMja,OACZD,EAAI,EACDA,EAAIiI,GAAK,CACZ,IAR2BmS,EAQbF,EAAMla,OARUqa,EAQNF,IAPG,iBAANC,GAA+B,iBAANC,GAAkBC,MAAMF,IAAME,MAAMD,GAQ9E,OAAO,EAEXra,IAXQ,IAAmBoa,EAAGC,EAclC,OAAO,GAGPE,GAAU1P,MAAM0P,SAAW,SAAUC,GACrC,MAA+C,mBAAxCla,OAAOgK,UAAUM,SAAS7E,KAAKyU,IAKtCC,GAAiB,GAEjBC,GAAgB,GAEhBC,GAAiB,CACjBC,UAAW3I,EACX4I,OAAQ9B,GACR+B,aAAcjB,IAGdkB,GAAqB,CAACJ,GAAeC,UAAU1I,QAASyI,GAAeE,OAAO3I,QAASyI,GAAeG,aAAa5I,SAEnH8I,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWC,OAAOF,IAE1GG,GAAgB,CAChBlC,YAAa,GACbmC,OAAQL,GAAmB1Z,QAC3B8K,KAAM,cAGNtN,KAAM,QACNsR,UAAW,gBACXL,QAAS,GAGb,SAASuL,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQzR,UACZ,OAAOuR,EAAoBlJ,QAAQ5N,MAAK,WACpC,OAAO8W,EAAoBC,GAAe9W,MAAM6W,EAAqBE,OAKjF,SAASC,KACL,IAAK,IAAIzb,EAAI,EAAGA,EAAI+J,UAAU9J,OAAQD,IAAK,CACvC,IAAIwa,EAAMzQ,UAAU/J,GAEpB,GAAIwa,EACA,IAAK,IAAIkB,KAAQlB,EACTA,EAAImB,eAAeD,KACfnB,GAAQC,EAAIkB,IACZ3R,UAAU,GAAG2R,GAAQlB,EAAIkB,GAAMra,QAE/B0I,UAAU,GAAG2R,GAAQlB,EAAIkB,IAO7C,OAAO3R,UAAU,GAGrB,IA4SI6R,GAAiB,IA5SH,WACd,SAASC,EAAY5d,GAGjB,IAAK,IAAI6d,KAxmEjB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIlT,UAAU,qCAsmExGmT,CAAgB/d,KAAM2d,GAEIlB,GACtB,GAAIA,GAAegB,eAAeG,GAAgB,CAC9C,IAAIV,EAAST,GAAemB,GACxBI,EAAad,EAAOlJ,QACxBhU,KAAK4d,GAAiBI,EAEjBzB,GAAeyB,IAIhBhe,KAAKie,aAAaf,GAK9Bld,KAAKsU,eAAiBiJ,GAAO,GAAIN,IACjCjd,KAAKke,QAAUX,GAAO,GAAIvd,KAAKsU,eAAgBvU,GAC/CC,KAAKme,WAAa,KAClBne,KAAKoe,YAAc,KACnBpe,KAAKqe,QAAS,EACdre,KAAKwT,QAAU,KAEfxT,KAAKse,+BACLte,KAAKue,UAAUve,KAAKke,QAAQhB,QAAe,OAAE,eA0QjD,OAjQAS,EAAYvR,UAAUoK,OAAS,SAAgBzW,GAI3C,GAA0E,iBAAlD,IAAZA,EAA0B,YAAcoN,EAAQpN,IAAwB,CAGhF,GAAIC,KAAKqe,OACL,OAAO,IAAIrd,MAAM,wDAGrB,IAAK,IAAIc,KAAK/B,EAAS,CAKnB,GAJU,cAAN+B,IACA/B,EAAQ+B,GAAK/B,EAAQ+B,GAAG0c,QAAQ,MAAO,MAGjC,YAAN1c,GAAyC,iBAAf/B,EAAQ+B,GAClC,OAAO,IAAId,MAAM,sCAGrBhB,KAAKke,QAAQpc,GAAK/B,EAAQ+B,GAK9B,QAAI,WAAY/B,KAAWA,EAAQmd,QACxBld,KAAKue,UAAUve,KAAKke,QAAQhB,QAIpC,MAAuB,iBAAZnd,EACPC,KAAKke,QAAQne,GAEbC,KAAKke,SAQpBP,EAAYvR,UAAU6R,aAAe,SAAsBQ,EAAcjZ,EAAUoJ,GAC/E,IAAI3D,EAAU,IAAIwD,GAAU,SAAUpJ,EAASC,GAC3C,IACI,IAAI0Y,EAAaS,EAAazK,QAC1B0K,EAAkB,IAAI1d,MAAM,wFAIhC,IAAKyd,EAAazK,QAEd,YADA1O,EAAOoZ,GAKX,IADA,IAAIC,EAAgB5B,GAAeC,OAAO,gBACjClb,EAAI,EAAGiI,EAAM4U,EAAc5c,OAAQD,EAAIiI,EAAKjI,IAAK,CACtD,IAAI8c,EAAmBD,EAAc7c,GAKrC,KADkBia,GAASe,GAAuB8B,IAC/BH,EAAaG,KAAgE,mBAAnCH,EAAaG,GAEtE,YADAtZ,EAAOoZ,IAKe,WAU1B,IATA,IAAIG,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAIxS,EAAQ,IAAItL,MAAM,UAAY8d,EAAa,6CAC3C7T,EAAUwD,EAAUnJ,OAAOgH,GAE/B,OADAoC,EAAgBzD,EAASY,UAAUA,UAAU9J,OAAS,IAC/CkJ,IAIN8T,EAAK,EAAGC,EAAOlC,GAAsB/a,OAAQgd,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuBnC,GAAsBiC,GAC5CN,EAAaQ,KACdR,EAAaQ,GAAwBJ,EAA4BI,KAK7EC,GAEA,IAAIC,EAAmB,SAA0BC,GACzC7C,GAAeyB,IACflP,QAAQuQ,KAAK,kCAAoCrB,GAErDzB,GAAeyB,GAAcS,EAC7BjC,GAAcwB,GAAcoB,EAI5B/Z,KAGA,aAAcoZ,EACVA,EAAalK,UAA6C,mBAA1BkK,EAAalK,SAC7CkK,EAAalK,WAAWjO,KAAK6Y,EAAkB7Z,GAE/C6Z,IAAmBV,EAAalK,UAGpC4K,GAAiB,GAEvB,MAAOjZ,GACLZ,EAAOY,OAKf,OADAyI,EAAoB1D,EAASzF,EAAUoJ,GAChC3D,GAGX0S,EAAYvR,UAAU8Q,OAAS,WAC3B,OAAOld,KAAKgU,SAAW,MAG3B2J,EAAYvR,UAAUkT,UAAY,SAAmBtB,EAAYxY,EAAUoJ,GACvE,IAAI2Q,EAAmBhD,GAAeyB,GAAcvP,EAAUpJ,QAAQkX,GAAeyB,IAAevP,EAAUnJ,OAAO,IAAItE,MAAM,sBAG/H,OADA2N,EAAoB4Q,EAAkB/Z,EAAUoJ,GACzC2Q,GAGX5B,EAAYvR,UAAUoT,cAAgB,SAAuBha,GACzD,IAAIia,EAAoBhR,EAAUpJ,QAAQsT,GAE1C,OADAhK,EAAoB8Q,EAAmBja,GAChCia,GAGX9B,EAAYvR,UAAU8H,MAAQ,SAAe1O,GACzC,IAAI0E,EAAOlK,KAEPiL,EAAUf,EAAKiU,WAAW7X,MAAK,WAK/B,OAJoB,OAAhB4D,EAAKmU,SACLnU,EAAKmU,OAASnU,EAAKkU,eAGhBlU,EAAKmU,UAIhB,OADA1P,EAAoB1D,EAASzF,EAAUA,GAChCyF,GAGX0S,EAAYvR,UAAUmS,UAAY,SAAmBmB,EAASla,EAAUoJ,GACpE,IAAI1E,EAAOlK,KAENqc,GAAQqD,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmB3f,KAAK4f,qBAAqBF,GAEjD,SAASG,IACL3V,EAAKgU,QAAQhB,OAAShT,EAAKgT,SAG/B,SAAS4C,EAAqB5C,GAK1B,OAJAhT,EAAK6V,QAAQ7C,GACb2C,IAEA3V,EAAKmU,OAASnU,EAAK+J,aAAa/J,EAAKgU,SAC9BhU,EAAKmU,OA+BhB,IAAI2B,EAAuC,OAApBhgB,KAAKme,WAAsBne,KAAKme,WAAkB,OAAE,WACvE,OAAO1P,EAAUpJ,aAChBoJ,EAAUpJ,UAqBf,OAnBArF,KAAKme,WAAa6B,EAAiB1Z,MAAK,WACpC,IAAI0X,EAAa2B,EAAiB,GAIlC,OAHAzV,EAAKsJ,QAAU,KACftJ,EAAKmU,OAAS,KAEPnU,EAAKoV,UAAUtB,GAAY1X,MAAK,SAAU4W,GAC7ChT,EAAK8J,QAAUkJ,EAAOlJ,QACtB6L,IACA3V,EAAKoU,+BACLpU,EAAKkU,YAzCb,SAAoBuB,GAChB,OAAO,WACH,IAAIM,EAAqB,EAmBzB,OAjBA,SAASC,IACL,KAAOD,EAAqBN,EAAiB5d,QAAQ,CACjD,IAAIic,EAAa2B,EAAiBM,GAMlC,OALAA,IAEA/V,EAAKsJ,QAAU,KACftJ,EAAKmU,OAAS,KAEPnU,EAAKoV,UAAUtB,GAAY1X,KAAKwZ,GAA6B,MAAEI,GAG1EL,IACA,IAAIvT,EAAQ,IAAItL,MAAM,sCAEtB,OADAkJ,EAAKiU,WAAa1P,EAAUnJ,OAAOgH,GAC5BpC,EAAKiU,WAGT+B,IAoBYC,CAAWR,SAE5B,OAAE,WACRE,IACA,IAAIvT,EAAQ,IAAItL,MAAM,sCAEtB,OADAkJ,EAAKiU,WAAa1P,EAAUnJ,OAAOgH,GAC5BpC,EAAKiU,cAGhBxP,EAAoB3O,KAAKme,WAAY3Y,EAAUoJ,GACxC5O,KAAKme,YAGhBR,EAAYvR,UAAUgU,SAAW,SAAkBpC,GAC/C,QAASxB,GAAcwB,IAG3BL,EAAYvR,UAAU2T,QAAU,SAAiBM,GAC7C9C,GAAOvd,KAAMqgB,IAGjB1C,EAAYvR,UAAUwT,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACd7d,EAAI,EAAGiI,EAAM2V,EAAQ3d,OAAQD,EAAIiI,EAAKjI,IAAK,CAChD,IAAIkc,EAAa0B,EAAQ5d,GACrB9B,KAAKogB,SAASpC,IACd2B,EAAiBje,KAAKsc,GAG9B,OAAO2B,GAGXhC,EAAYvR,UAAUkS,6BAA+B,WAKjD,IAAK,IAAIxc,EAAI,EAAGiI,EAAMgT,GAAehb,OAAQD,EAAIiI,EAAKjI,IAClDqb,GAAcnd,KAAM+c,GAAejb,KAI3C6b,EAAYvR,UAAUkU,eAAiB,SAAwBvgB,GAC3D,OAAO,IAAI4d,EAAY5d,IAGpB4d,EArSO,IA8SlBxW,EAAO7E,QAAUob,IAEf,CAAC,EAAI,KAAK,GAAG,CAAC,GAzuFmW,CAyuF/V","file":"8763.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\n/**\n * A concrete implementation of IObservbleMap<T>.\n */\nexport class ObservableMap {\n    /**\n     * Construct a new observable map.\n     */\n    constructor(options = {}) {\n        this._map = new Map();\n        this._changed = new Signal(this);\n        this._isDisposed = false;\n        this._itemCmp = options.itemCmp || Private.itemCmp;\n        if (options.values) {\n            for (const key in options.values) {\n                this._map.set(key, options.values[key]);\n            }\n        }\n    }\n    /**\n     * The type of the Observable.\n     */\n    get type() {\n        return 'Map';\n    }\n    /**\n     * A signal emitted when the map has changed.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Whether this map has been disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * The number of key-value pairs in the map.\n     */\n    get size() {\n        return this._map.size;\n    }\n    /**\n     * Set a key-value pair in the map\n     *\n     * @param key - The key to set.\n     *\n     * @param value - The value for the key.\n     *\n     * @returns the old value for the key, or undefined\n     *   if that did not exist.\n     *\n     * @throws if the new value is undefined.\n     *\n     * #### Notes\n     * This is a no-op if the value does not change.\n     */\n    set(key, value) {\n        const oldVal = this._map.get(key);\n        if (value === undefined) {\n            throw Error('Cannot set an undefined value, use remove');\n        }\n        // Bail if the value does not change.\n        const itemCmp = this._itemCmp;\n        if (oldVal !== undefined && itemCmp(oldVal, value)) {\n            return oldVal;\n        }\n        this._map.set(key, value);\n        this._changed.emit({\n            type: oldVal ? 'change' : 'add',\n            key: key,\n            oldValue: oldVal,\n            newValue: value\n        });\n        return oldVal;\n    }\n    /**\n     * Get a value for a given key.\n     *\n     * @param key - the key.\n     *\n     * @returns the value for that key.\n     */\n    get(key) {\n        return this._map.get(key);\n    }\n    /**\n     * Check whether the map has a key.\n     *\n     * @param key - the key to check.\n     *\n     * @returns `true` if the map has the key, `false` otherwise.\n     */\n    has(key) {\n        return this._map.has(key);\n    }\n    /**\n     * Get a list of the keys in the map.\n     *\n     * @returns - a list of keys.\n     */\n    keys() {\n        const keyList = [];\n        this._map.forEach((v, k) => {\n            keyList.push(k);\n        });\n        return keyList;\n    }\n    /**\n     * Get a list of the values in the map.\n     *\n     * @returns - a list of values.\n     */\n    values() {\n        const valList = [];\n        this._map.forEach((v, k) => {\n            valList.push(v);\n        });\n        return valList;\n    }\n    /**\n     * Remove a key from the map\n     *\n     * @param key - the key to remove.\n     *\n     * @returns the value of the given key,\n     *   or undefined if that does not exist.\n     *\n     * #### Notes\n     * This is a no-op if the value does not change.\n     */\n    delete(key) {\n        const oldVal = this._map.get(key);\n        const removed = this._map.delete(key);\n        if (removed) {\n            this._changed.emit({\n                type: 'remove',\n                key: key,\n                oldValue: oldVal,\n                newValue: undefined\n            });\n        }\n        return oldVal;\n    }\n    /**\n     * Set the ObservableMap to an empty map.\n     */\n    clear() {\n        // Delete one by one to emit the correct signals.\n        const keyList = this.keys();\n        for (let i = 0; i < keyList.length; i++) {\n            this.delete(keyList[i]);\n        }\n    }\n    /**\n     * Dispose of the resources held by the map.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n        this._map.clear();\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The default strict equality item comparator.\n     */\n    function itemCmp(first, second) {\n        return first === second;\n    }\n    Private.itemCmp = itemCmp;\n})(Private || (Private = {}));\n//# sourceMappingURL=observablemap.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = void 0;\n/**\n * Deserialize and return the unpacked message.\n *\n * #### Notes\n * Handles JSON blob strings and binary messages.\n */\nfunction deserialize(data) {\n    let value;\n    if (typeof data === 'string') {\n        value = JSON.parse(data);\n    }\n    else {\n        value = deserializeBinary(data);\n    }\n    return value;\n}\nexports.deserialize = deserialize;\n/**\n * Serialize a kernel message for transport.\n *\n * #### Notes\n * If there is binary content, an `ArrayBuffer` is returned,\n * otherwise the message is converted to a JSON string.\n */\nfunction serialize(msg) {\n    var _a;\n    let value;\n    if ((_a = msg.buffers) === null || _a === void 0 ? void 0 : _a.length) {\n        value = serializeBinary(msg);\n    }\n    else {\n        value = JSON.stringify(msg);\n    }\n    return value;\n}\nexports.serialize = serialize;\n/**\n * Deserialize a binary message to a Kernel Message.\n */\nfunction deserializeBinary(buf) {\n    const data = new DataView(buf);\n    // read the header: 1 + nbufs 32b integers\n    const nbufs = data.getUint32(0);\n    const offsets = [];\n    if (nbufs < 2) {\n        throw new Error('Invalid incoming Kernel Message');\n    }\n    for (let i = 1; i <= nbufs; i++) {\n        offsets.push(data.getUint32(i * 4));\n    }\n    const jsonBytes = new Uint8Array(buf.slice(offsets[0], offsets[1]));\n    const msg = JSON.parse(new TextDecoder('utf8').decode(jsonBytes));\n    // the remaining chunks are stored as DataViews in msg.buffers\n    msg.buffers = [];\n    for (let i = 1; i < nbufs; i++) {\n        const start = offsets[i];\n        const stop = offsets[i + 1] || buf.byteLength;\n        msg.buffers.push(new DataView(buf.slice(start, stop)));\n    }\n    return msg;\n}\n/**\n * Implement the binary serialization protocol.\n *\n * Serialize Kernel message to ArrayBuffer.\n */\nfunction serializeBinary(msg) {\n    const offsets = [];\n    const buffers = [];\n    const encoder = new TextEncoder();\n    let origBuffers = [];\n    if (msg.buffers !== undefined) {\n        origBuffers = msg.buffers;\n        delete msg['buffers'];\n    }\n    const jsonUtf8 = encoder.encode(JSON.stringify(msg));\n    buffers.push(jsonUtf8.buffer);\n    for (let i = 0; i < origBuffers.length; i++) {\n        // msg.buffers elements could be either views or ArrayBuffers\n        // buffers elements are ArrayBuffers\n        const b = origBuffers[i];\n        buffers.push(ArrayBuffer.isView(b) ? b.buffer : b);\n    }\n    const nbufs = buffers.length;\n    offsets.push(4 * (nbufs + 1));\n    for (let i = 0; i + 1 < buffers.length; i++) {\n        offsets.push(offsets[offsets.length - 1] + buffers[i].byteLength);\n    }\n    const msgBuf = new Uint8Array(offsets[offsets.length - 1] + buffers[buffers.length - 1].byteLength);\n    // use DataView.setUint32 for network byte-order\n    const view = new DataView(msgBuf.buffer);\n    // write nbufs to first 4 bytes\n    view.setUint32(0, nbufs);\n    // write offsets to next 4 * nbufs bytes\n    for (let i = 0; i < offsets.length; i++) {\n        view.setUint32(4 * (i + 1), offsets[i]);\n    }\n    // write all the buffers at their respective offsets\n    for (let i = 0; i < buffers.length; i++) {\n        msgBuf.set(new Uint8Array(buffers[i]), offsets[i]);\n    }\n    return msgBuf.buffer;\n}\n//# sourceMappingURL=serialize.js.map","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_maxConcurrency, _cancelError = E_CANCELED) {\n        this._maxConcurrency = _maxConcurrency;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    acquire() {\n        const locked = this.isLocked();\n        const ticketPromise = new Promise((resolve, reject) => this._queue.push({ resolve, reject }));\n        if (!locked)\n            this._dispatch();\n        return ticketPromise;\n    }\n    runExclusive(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire();\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            const releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    }\n    cancel() {\n        this._queue.forEach((ticket) => ticket.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatch() {\n        const nextTicket = this._queue.shift();\n        if (!nextTicket)\n            return;\n        let released = false;\n        this._currentReleaser = () => {\n            if (released)\n                return;\n            released = true;\n            this._value++;\n            this._dispatch();\n        };\n        nextTicket.resolve([this._value--, this._currentReleaser]);\n    }\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n    release() {\n        this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: () => new Promise((resolve, reject) => __awaiter$2(this, void 0, void 0, function* () {\n            let isTimeout = false;\n            const handle = setTimeout(() => {\n                isTimeout = true;\n                reject(timeoutError);\n            }, timeout);\n            try {\n                const ticket = yield sync.acquire();\n                if (isTimeout) {\n                    const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                    release();\n                }\n                else {\n                    clearTimeout(handle);\n                    resolve(ticket);\n                }\n            }\n            catch (e) {\n                if (!isTimeout) {\n                    clearTimeout(handle);\n                    reject(e);\n                }\n            }\n        })),\n        runExclusive(callback) {\n            return __awaiter$2(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire();\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\n        release() {\n            sync.release();\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        isLocked: () => sync.isLocked(),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"sourceRoot":""}