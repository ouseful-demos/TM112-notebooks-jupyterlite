{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/help-extension/lib/index.js"],"names":["CommandIDs","open","about","activate","close","show","hide","launchClassic","LAB_IS_SECURE","window","location","protocol","id","autoStart","requires","ITranslator","optional","IMainMenu","ICommandPalette","app","translator","menu","palette","commands","trans","load","category","__","addCommand","label","name","execute","versionNumber","version","versionInfo","className","title","jupyterIcon","margin","height","width","jupyterlabWordmarkIcon","externalLinks","href","target","rel","copyright","body","showDialog","buttons","Dialog","helpMenu","addGroup","command","addItem","PageConfig","ILayoutRestorer","IInspector","mainMenu","restorer","inspector","counter","baseUrl","shell","serviceManager","tracker","WidgetTracker","namespace","resources","text","url","sort","a","b","localeCompare","restore","args","widget","content","contextualHelpGroup","undefined","map","resourcesGroup","kernelInfoCache","Map","sessions","runningChanged","connect","m","_a","length","sessionModel","kernel","has","session","connectTo","model","kernelConnectionOptions","handleComms","info","then","kernelInfo","_b","set","usesKernel","result","currentWidget","kernelUsers","forEach","u","getKernel","bannerCommand","spec","kernelspecs","specs","kernelName","display_name","kernelIconUrl","index","indexOf","slice","isVisible","isEnabled","headerLogo","src","banner","kernelGroup","help_links","link","commandId","push","dispose","URLExt","IFrame","sandbox","addClass","MainAreaWidget","newHelpWidget","add","reload"],"mappings":"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","file":"4203.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module help-extension\n */\nimport { ILayoutRestorer } from '@jupyterlab/application';\nimport { Dialog, ICommandPalette, IFrame, MainAreaWidget, showDialog, WidgetTracker } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IInspector } from '@jupyterlab/inspector';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { jupyterIcon, jupyterlabWordmarkIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\n/**\n * The command IDs used by the help plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.open = 'help:open';\n    CommandIDs.about = 'help:about';\n    CommandIDs.activate = 'help:activate';\n    CommandIDs.close = 'help:close';\n    CommandIDs.show = 'help:show';\n    CommandIDs.hide = 'help:hide';\n    CommandIDs.launchClassic = 'help:launch-classic-notebook';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A flag denoting whether the application is loaded over HTTPS.\n */\nconst LAB_IS_SECURE = window.location.protocol === 'https:';\n/**\n * The class name added to the help widget.\n */\nconst HELP_CLASS = 'jp-Help';\n/**\n * Add a command to show an About dialog.\n */\nconst about = {\n    id: '@jupyterlab/help-extension:about',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [IMainMenu, ICommandPalette],\n    activate: (app, translator, menu, palette) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.about, {\n            label: trans.__('About %1', app.name),\n            execute: () => {\n                // Create the header of the about dialog\n                const versionNumber = trans.__('Version %1', app.version);\n                const versionInfo = (React.createElement(\"span\", { className: \"jp-About-version-info\" },\n                    React.createElement(\"span\", { className: \"jp-About-version\" }, versionNumber)));\n                const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                    React.createElement(jupyterIcon.react, { margin: \"7px 9.5px\", height: \"auto\", width: \"58px\" }),\n                    React.createElement(\"div\", { className: \"jp-About-header-info\" },\n                        React.createElement(jupyterlabWordmarkIcon.react, { height: \"auto\", width: \"196px\" }),\n                        versionInfo)));\n                // Create the body of the about dialog\n                const jupyterURL = 'https://jupyter.org/about.html';\n                const contributorsURL = 'https://github.com/jupyterlab/jupyterlab/graphs/contributors';\n                const externalLinks = (React.createElement(\"span\", { className: \"jp-About-externalLinks\" },\n                    React.createElement(\"a\", { href: contributorsURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('CONTRIBUTOR LIST')),\n                    React.createElement(\"a\", { href: jupyterURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('ABOUT PROJECT JUPYTER'))));\n                const copyright = (React.createElement(\"span\", { className: \"jp-About-copyright\" }, trans.__('© 2015-2021 Project Jupyter Contributors')));\n                const body = (React.createElement(\"div\", { className: \"jp-About-body\" },\n                    externalLinks,\n                    copyright));\n                return showDialog({\n                    title,\n                    body,\n                    buttons: [\n                        Dialog.createButton({\n                            label: trans.__('Dismiss'),\n                            className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                        })\n                    ]\n                });\n            }\n        });\n        if (menu) {\n            const helpMenu = menu.helpMenu;\n            helpMenu.addGroup([{ command: CommandIDs.about }], 0);\n        }\n        if (palette) {\n            palette.addItem({ command: CommandIDs.about, category });\n        }\n    }\n};\n/**\n * A plugin to add a command to open the Classic Notebook interface.\n */\nconst launchClassic = {\n    id: '@jupyterlab/help-extension:launch-classic',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [IMainMenu, ICommandPalette],\n    activate: (app, translator, menu, palette) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.launchClassic, {\n            label: trans.__('Launch Classic Notebook'),\n            execute: () => {\n                window.open(PageConfig.getBaseUrl() + 'tree');\n            }\n        });\n        if (menu) {\n            const helpMenu = menu.helpMenu;\n            helpMenu.addGroup([{ command: CommandIDs.launchClassic }], 1);\n        }\n        if (palette) {\n            palette.addItem({ command: CommandIDs.launchClassic, category });\n        }\n    }\n};\n/**\n * A plugin to add a list of resources to the help menu.\n */\nconst resources = {\n    id: '@jupyterlab/help-extension:resources',\n    autoStart: true,\n    requires: [IMainMenu, ITranslator],\n    optional: [ICommandPalette, ILayoutRestorer, IInspector],\n    activate: (app, mainMenu, translator, palette, restorer, inspector) => {\n        const trans = translator.load('jupyterlab');\n        let counter = 0;\n        const category = trans.__('Help');\n        const namespace = 'help-doc';\n        const baseUrl = PageConfig.getBaseUrl();\n        const { commands, shell, serviceManager } = app;\n        const tracker = new WidgetTracker({ namespace });\n        const resources = [\n            {\n                text: trans.__('JupyterLab Reference'),\n                url: 'https://jupyterlab.readthedocs.io/en/stable/'\n            },\n            {\n                text: trans.__('JupyterLab FAQ'),\n                url: 'https://jupyterlab.readthedocs.io/en/stable/getting_started/faq.html'\n            },\n            {\n                text: trans.__('Jupyter Reference'),\n                url: 'https://jupyter.org/documentation'\n            },\n            {\n                text: trans.__('Jupyter Forum'),\n                url: 'https://discourse.jupyter.org/c/jupyterlab'\n            },\n            {\n                text: trans.__('Markdown Reference'),\n                url: 'https://commonmark.org/help/'\n            }\n        ];\n        resources.sort((a, b) => {\n            return a.text.localeCompare(b.text);\n        });\n        // Handle state restoration.\n        if (restorer) {\n            void restorer.restore(tracker, {\n                command: CommandIDs.open,\n                args: widget => ({\n                    url: widget.content.url,\n                    text: widget.content.title.label\n                }),\n                name: widget => widget.content.url\n            });\n        }\n        /**\n         * Create a new HelpWidget widget.\n         */\n        function newHelpWidget(url, text) {\n            // Allow scripts and forms so that things like\n            // readthedocs can use their search functionality.\n            // We *don't* allow same origin requests, which\n            // can prevent some content from being loaded onto the\n            // help pages.\n            const content = new IFrame({\n                sandbox: ['allow-scripts', 'allow-forms']\n            });\n            content.url = url;\n            content.addClass(HELP_CLASS);\n            content.title.label = text;\n            content.id = `${namespace}-${++counter}`;\n            const widget = new MainAreaWidget({ content });\n            widget.addClass('jp-Help');\n            return widget;\n        }\n        // Populate the Help menu.\n        const helpMenu = mainMenu.helpMenu;\n        // Contextual help in its own group\n        const contextualHelpGroup = [\n            inspector ? 'inspector:open' : undefined\n        ].map(command => ({ command }));\n        helpMenu.addGroup(contextualHelpGroup, 0);\n        const resourcesGroup = resources.map(args => ({\n            args,\n            command: CommandIDs.open\n        }));\n        helpMenu.addGroup(resourcesGroup, 10);\n        // Generate a cache of the kernel help links.\n        const kernelInfoCache = new Map();\n        serviceManager.sessions.runningChanged.connect((m, sessions) => {\n            var _a;\n            // If a new session has been added, it is at the back\n            // of the session list. If one has changed or stopped,\n            // it does not hurt to check it.\n            if (!sessions.length) {\n                return;\n            }\n            const sessionModel = sessions[sessions.length - 1];\n            if (!sessionModel.kernel ||\n                kernelInfoCache.has(sessionModel.kernel.name)) {\n                return;\n            }\n            const session = serviceManager.sessions.connectTo({\n                model: sessionModel,\n                kernelConnectionOptions: { handleComms: false }\n            });\n            void ((_a = session.kernel) === null || _a === void 0 ? void 0 : _a.info.then(kernelInfo => {\n                var _a, _b;\n                const name = session.kernel.name;\n                // Check the cache second time so that, if two callbacks get scheduled,\n                // they don't try to add the same commands.\n                if (kernelInfoCache.has(name)) {\n                    return;\n                }\n                // Set the Kernel Info cache.\n                kernelInfoCache.set(name, kernelInfo);\n                // Utility function to check if the current widget\n                // has registered itself with the help menu.\n                const usesKernel = () => {\n                    let result = false;\n                    const widget = app.shell.currentWidget;\n                    if (!widget) {\n                        return result;\n                    }\n                    helpMenu.kernelUsers.forEach(u => {\n                        var _a;\n                        if (u.tracker.has(widget) && ((_a = u.getKernel(widget)) === null || _a === void 0 ? void 0 : _a.name) === name) {\n                            result = true;\n                        }\n                    });\n                    return result;\n                };\n                // Add the kernel banner to the Help Menu.\n                const bannerCommand = `help-menu-${name}:banner`;\n                const spec = (_b = (_a = serviceManager.kernelspecs) === null || _a === void 0 ? void 0 : _a.specs) === null || _b === void 0 ? void 0 : _b.kernelspecs[name];\n                if (!spec) {\n                    return;\n                }\n                const kernelName = spec.display_name;\n                let kernelIconUrl = spec.resources['logo-64x64'];\n                if (kernelIconUrl) {\n                    const index = kernelIconUrl.indexOf('kernelspecs');\n                    kernelIconUrl = baseUrl + kernelIconUrl.slice(index);\n                }\n                commands.addCommand(bannerCommand, {\n                    label: trans.__('About the %1 Kernel', kernelName),\n                    isVisible: usesKernel,\n                    isEnabled: usesKernel,\n                    execute: () => {\n                        // Create the header of the about dialog\n                        const headerLogo = React.createElement(\"img\", { src: kernelIconUrl });\n                        const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                            headerLogo,\n                            React.createElement(\"div\", { className: \"jp-About-header-info\" }, kernelName)));\n                        const banner = React.createElement(\"pre\", null, kernelInfo.banner);\n                        const body = React.createElement(\"div\", { className: \"jp-About-body\" }, banner);\n                        return showDialog({\n                            title,\n                            body,\n                            buttons: [\n                                Dialog.createButton({\n                                    label: trans.__('Dismiss'),\n                                    className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                                })\n                            ]\n                        });\n                    }\n                });\n                helpMenu.addGroup([{ command: bannerCommand }], 20);\n                // Add the kernel info help_links to the Help menu.\n                const kernelGroup = [];\n                (kernelInfo.help_links || []).forEach(link => {\n                    const commandId = `help-menu-${name}:${link.text}`;\n                    commands.addCommand(commandId, {\n                        label: link.text,\n                        isVisible: usesKernel,\n                        isEnabled: usesKernel,\n                        execute: () => {\n                            return commands.execute(CommandIDs.open, link);\n                        }\n                    });\n                    kernelGroup.push({ command: commandId });\n                });\n                helpMenu.addGroup(kernelGroup, 21);\n                // Dispose of the session object since we no longer need it.\n                session.dispose();\n            }));\n        });\n        commands.addCommand(CommandIDs.open, {\n            label: args => args['text'],\n            execute: args => {\n                const url = args['url'];\n                const text = args['text'];\n                const newBrowserTab = args['newBrowserTab'] || false;\n                // If help resource will generate a mixed content error, load externally.\n                if (newBrowserTab ||\n                    (LAB_IS_SECURE && URLExt.parse(url).protocol !== 'https:')) {\n                    window.open(url);\n                    return;\n                }\n                const widget = newHelpWidget(url, text);\n                void tracker.add(widget);\n                shell.add(widget, 'main');\n                return widget;\n            }\n        });\n        if (palette) {\n            resources.forEach(args => {\n                palette.addItem({ args, command: CommandIDs.open, category });\n            });\n            palette.addItem({\n                args: { reload: true },\n                command: 'apputils:reset',\n                category\n            });\n        }\n    }\n};\nconst plugins = [about, launchClassic, resources];\nexport default plugins;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}