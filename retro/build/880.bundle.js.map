{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/./build/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/css-loader/dist/packages/application-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/css-loader/dist/packages/iframe-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/css-loader/dist/packages/retro-application-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/node_modules/css-loader/dist/packages/application-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/node_modules/css-loader/dist/packages/iframe-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/node_modules/css-loader/dist/packages/retro-application-extension/style/base.css"],"names":["serverMods","mimeExtensionsMods","disabled","JSON","parse","PageConfig","async","createModule","scope","module","window","_JUPYTERLAB","get","e","console","warn","jupyterLiteServer","JupyterLiteServer","registerPluginModules","Promise","all","start","serviceManager","mimeExtensions","RetroApp","app","mods","id","includes","concat","federatedExtensionPromises","federatedMimeExtensionPromises","federatedStylePromises","extensions","federatedExtensionNames","Set","forEach","data","extension","add","name","push","mimeExtension","style","allSettled","p","status","plugin","exports","hasOwnProperty","default","plugins","Array","isArray","split","activePlugins","value","error","reason","log","restored","main","___CSS_LOADER_EXPORT___","content","__esModule","locals"],"mappings":"mKAQA,EAAQ,OAER,MAAMA,EAAa,CACjB,oCACA,qCACA,qCACA,sCAGIC,EAAqB,CACzB,qCACA,4EACA,qCAGIC,EAAWC,KAAKC,MAAM,EAAAC,WAAA,UAAqB,uBAAyB,MAE1EC,eAAeC,EAAaC,EAAOC,GACjC,IAEE,aADsBC,OAAOC,YAAYH,GAAOI,IAAIH,MAEpD,MAAOI,GAEP,MADAC,QAAQC,KAAK,qCAAqCP,cAAkBC,KAC9DI,IAOVP,iBAEE,MAAMU,EAAoB,IAAI,EAAAC,kBAAkB,IAChDD,EAAkBE,4BAA4BC,QAAQC,IAAIpB,UAEpDgB,EAAkBK,QAGxB,MAAM,eAAEC,GAAmBN,EAErBO,QAAuBJ,QAAQC,IAAInB,IAGnC,SAAEuB,GAAa,EAAQ,OACvBC,EAAM,IAAID,EAAS,CAAEF,iBAAgBC,mBAE3C,IAAIG,EAAO,CAET,EAAQ,OACR,EAAQ,OACR,EAAQ,OAGR,yBACE,EAAGC,QAAgB,2CAAPA,IAEd,EAAQ,OACR,EAAQ,OAGR,yBAAyD,EAAGA,QAC1D,CACE,yCACA,0CACA,sDACAC,SAASD,KAEb,wBAA2D,EAAGA,QAC5D,CACE,4CACA,+CACAC,SAASD,KAEb,wBAA0D,EAAGA,QAC3D,CAAC,2CAA2CC,SAASD,KAEvD,yBAA2D,EAAGA,QAC5D,CAAC,2CAA2CC,SAASD,KAEvD,EAAQ,OACR,EAAQ,MACR,yBAAyD,EAAGA,QAC1D,CACE,yCACA,yCACA,iDACAC,SAASD,KAEb,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,QAMV,OADa,EAAAtB,WAAA,UAAqB,cAEhC,IAAK,OACHqB,EAAOA,EAAKG,OAAO,CACjB,oBAA4D,EAAGF,QAC7D,CACE,4CACA,6CACA,4CACA,uDACA,8CACA,gDACAC,SAASD,KAGb,yBACE,EAAGA,QAAgB,0CAAPA,MAGhB,MAEF,IAAK,YACHD,EAAOA,EAAKG,OAAO,CACjB,wBAA0D,EAAGF,QAC3D,CAAC,6CAA6CC,SAASD,KAEzD,yBAAwD,EAAGA,QACzD,CACE,wCACA,2CACAC,SAASD,OAGf,MAEF,IAAK,OACHD,EAAOA,EAAKG,OAAO,CACjB,wBAA0D,EAAGF,QAC3D,CAAC,yCAAyCC,SAASD,KAErD,wBAA2D,EAAGA,QAC5D,CAAC,2CAA2CC,SAASD,KAEvD,oBAA4D,EAAGA,QAC7D,CACE,4CACA,6CACAC,SAASD,OAOnB,MAAMG,EAA6B,GAC7BC,EAAiC,GACjCC,EAAyB,GAIzBC,EAAa9B,KAAKC,MACtB,EAAAC,WAAA,UAAqB,yBAIjB6B,EAA0B,IAAIC,IAEpCF,EAAWG,SAAQC,IACbA,EAAKC,YACPJ,EAAwBK,IAAIF,EAAKG,MACjCV,EAA2BW,KAAKlC,EAAa8B,EAAKG,KAAMH,EAAKC,aAE3DD,EAAKK,gBACPR,EAAwBK,IAAIF,EAAKG,MACjCT,EAA+BU,KAAKlC,EAAa8B,EAAKG,KAAMH,EAAKK,iBAE/DL,EAAKM,OACPX,EAAuBS,KAAKlC,EAAa8B,EAAKG,KAAMH,EAAKM,kBA+B3BxB,QAAQyB,WAAWd,IACjCM,SAAQS,IAC1B,GAAiB,cAAbA,EAAEC,OACJ,IAAK,IAAIC,KA3Bb,UAAwBT,GAEtB,IAAIU,EAEFA,EADEV,EAAUW,eAAe,cACjBX,EAAUY,QAGVZ,EAGZ,IAAIa,EAAUC,MAAMC,QAAQL,GAAWA,EAAU,CAACA,GAClD,IAAK,IAAID,KAAUI,EAGfjD,EAAS0B,SAASmB,EAAOpB,KACzBzB,EAAS0B,SAASmB,EAAOpB,GAAG2B,MAAM,KAAK,YAInCP,GAQaQ,CAAcV,EAAEW,OACjC9B,EAAKe,KAAKM,QAGZjC,QAAQ2C,MAAMZ,EAAEa,WAIpBjC,EAAIP,sBAAsBQ,GAE1BZ,QAAQ6C,IAAI,sBACNlC,EAAIJ,QACVP,QAAQ6C,IAAI,wDACNlC,EAAImC,SACV9C,QAAQ6C,IAAI,8BAGdE,I,qTCrOIC,E,MAA0B,GAA4B,KAE1DA,EAAwBrB,KAAK,CAAChC,EAAOkB,GAAI,4QAA6Q,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,mEAAmE,MAAQ,GAAG,SAAW,gBAAgB,eAAiB,CAAC,6QAA6Q,WAAa,MAEtuB,W,6FCJImC,E,MAA0B,GAA4B,KAE1DA,EAAwBrB,KAAK,CAAChC,EAAOkB,GAAI,6YAA8Y,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,8DAA8D,MAAQ,GAAG,SAAW,wEAAwE,eAAiB,CAAC,8YAA8Y,WAAa,MAE3hC,W,6FCJImC,E,MAA0B,GAA4B,KAE1DA,EAAwBrB,KAAK,CAAChC,EAAOkB,GAAI,4QAA6Q,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yEAAyE,MAAQ,GAAG,SAAW,gBAAgB,eAAiB,CAAC,6QAA6Q,WAAa,MAE5uB,W,gBCPA,IAAIoC,EAAU,EAAQ,OAGC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQb,QAAUa,KAG/CA,EAAU,CAAC,CAACtD,EAAOkB,GAAIoC,EAAS,MAQrB,EAAQ,MAAR,CAAwFA,EALvF,CAEd,OAAiB,OACjB,WAAoB,IAIhBA,EAAQE,SACVxD,EAAOuC,QAAUe,EAAQE,S,gBCf3B,IAAIF,EAAU,EAAQ,OAGC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQb,QAAUa,KAG/CA,EAAU,CAAC,CAACtD,EAAOkB,GAAIoC,EAAS,MAQrB,EAAQ,MAAR,CAAwFA,EALvF,CAEd,OAAiB,OACjB,WAAoB,IAIhBA,EAAQE,SACVxD,EAAOuC,QAAUe,EAAQE,S,gBCf3B,IAAIF,EAAU,EAAQ,OAGC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQb,QAAUa,KAG/CA,EAAU,CAAC,CAACtD,EAAOkB,GAAIoC,EAAS,MAQrB,EAAQ,MAAR,CAAwFA,EALvF,CAEd,OAAiB,OACjB,WAAoB,IAIhBA,EAAQE,SACVxD,EAAOuC,QAAUe,EAAQE","file":"880.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JupyterLiteServer } from '@jupyterlite/server';\n\n// The webpack public path needs to be set before loading the CSS assets.\nimport { PageConfig } from '@jupyterlab/coreutils';\n\nrequire('./style.js');\n\nconst serverMods = [\n  import('@jupyterlite/javascript-kernel-extension'),\n  import('@jupyterlite/p5-kernel-extension'),\n  import('@jupyterlite/pyolite-kernel-extension'),\n  import('@jupyterlite/server-extension')\n];\n\nconst mimeExtensionsMods = [\n  import('@jupyterlite/iframe-extension'),\n  import('@jupyterlab/json-extension'),\n  import('@jupyterlab/vega5-extension')\n];\n\nconst disabled = JSON.parse(PageConfig.getOption('disabledExtensions') || '[]');\n\nasync function createModule(scope, module) {\n  try {\n    const factory = await window._JUPYTERLAB[scope].get(module);\n    return factory();\n  } catch (e) {\n    console.warn(`Failed to create module: package: ${scope}; module: ${module}`);\n    throw e;\n  }\n}\n\n/**\n * The main entry point for the application.\n */\nasync function main() {\n  // create the in-browser JupyterLite Server\n  const jupyterLiteServer = new JupyterLiteServer({});\n  jupyterLiteServer.registerPluginModules(await Promise.all(serverMods));\n  // start the server\n  await jupyterLiteServer.start();\n\n  // retrieve the custom service manager from the server app\n  const { serviceManager } = jupyterLiteServer;\n\n  const mimeExtensions = await Promise.all(mimeExtensionsMods);\n\n  // create a RetroLab frontend\n  const { RetroApp } = require('@retrolab/application');\n  const app = new RetroApp({ serviceManager, mimeExtensions });\n\n  let mods = [\n    // @jupyterlite plugins\n    require('@jupyterlite/application-extension'),\n    require('@jupyterlite/retro-application-extension'),\n    require('@jupyterlite/theme-extension'),\n    // @retrolab plugins\n    // do not enable the document opener from RetroLab\n    require('@retrolab/application-extension').default.filter(\n      ({ id }) => id !== '@retrolab/application-extension:opener'\n    ),\n    require('@retrolab/help-extension'),\n    require('@retrolab/notebook-extension'),\n\n    // @jupyterlab plugins\n    require('@jupyterlab/apputils-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/apputils-extension:palette',\n        '@jupyterlab/apputils-extension:settings',\n        '@jupyterlab/apputils-extension:themes-palette-menu'\n      ].includes(id)\n    ),\n    require('@jupyterlab/codemirror-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/codemirror-extension:services',\n        '@jupyterlab/codemirror-extension:codemirror'\n      ].includes(id)\n    ),\n    require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n      ['@jupyterlab/completer-extension:manager'].includes(id)\n    ),\n    require('@jupyterlab/docmanager-extension').default.filter(({ id }) =>\n      ['@jupyterlab/docmanager-extension:plugin'].includes(id)\n    ),\n    require('@jupyterlab/mainmenu-extension'),\n    require('@jupyterlab/mathjax2-extension'),\n    require('@jupyterlab/notebook-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/notebook-extension:factory',\n        '@jupyterlab/notebook-extension:tracker',\n        '@jupyterlab/notebook-extension:widget-factory'\n      ].includes(id)\n    ),\n    require('@jupyterlab/rendermime-extension'),\n    require('@jupyterlab/shortcuts-extension'),\n    require('@jupyterlab/theme-light-extension'),\n    require('@jupyterlab/theme-dark-extension')\n  ];\n\n  // The motivation here is to only load a specific set of plugins dependending on\n  // the current page\n  const page = PageConfig.getOption('retroPage');\n  switch (page) {\n    case 'tree': {\n      mods = mods.concat([\n        require('@jupyterlab/filebrowser-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/filebrowser-extension:browser',\n            '@jupyterlab/filebrowser-extension:download',\n            '@jupyterlab/filebrowser-extension:factory',\n            '@jupyterlab/filebrowser-extension:file-upload-status',\n            '@jupyterlab/filebrowser-extension:open-with',\n            '@jupyterlab/filebrowser-extension:share-file'\n          ].includes(id)\n        ),\n        // do not enable the new terminal button from RetroLab\n        require('@retrolab/tree-extension').default.filter(\n          ({ id }) => id !== '@retrolab/tree-extension:new-terminal'\n        )\n      ]);\n      break;\n    }\n    case 'notebooks': {\n      mods = mods.concat([\n        require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n          ['@jupyterlab/completer-extension:notebooks'].includes(id)\n        ),\n        require('@jupyterlab/tooltip-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/tooltip-extension:manager',\n            '@jupyterlab/tooltip-extension:notebooks'\n          ].includes(id)\n        )\n      ]);\n      break;\n    }\n    case 'edit': {\n      mods = mods.concat([\n        require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n          ['@jupyterlab/completer-extension:files'].includes(id)\n        ),\n        require('@jupyterlab/fileeditor-extension').default.filter(({ id }) =>\n          ['@jupyterlab/fileeditor-extension:plugin'].includes(id)\n        ),\n        require('@jupyterlab/filebrowser-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/filebrowser-extension:browser',\n            '@jupyterlab/filebrowser-extension:factory'\n          ].includes(id)\n        ),\n      ]);\n      break;\n    }\n  }\n\n  const federatedExtensionPromises = [];\n  const federatedMimeExtensionPromises = [];\n  const federatedStylePromises = [];\n\n  // This is all the data needed to load and activate plugins. This should be\n  // gathered by the server and put onto the initial page template.\n  const extensions = JSON.parse(\n    PageConfig.getOption('federated_extensions')\n  );\n\n  // The set of federated extension names.\n  const federatedExtensionNames = new Set();\n\n  extensions.forEach(data => {\n    if (data.extension) {\n      federatedExtensionNames.add(data.name);\n      federatedExtensionPromises.push(createModule(data.name, data.extension));\n    }\n    if (data.mimeExtension) {\n      federatedExtensionNames.add(data.name);\n      federatedMimeExtensionPromises.push(createModule(data.name, data.mimeExtension));\n    }\n    if (data.style) {\n      federatedStylePromises.push(createModule(data.name, data.style));\n    }\n  });\n\n  /**\n   * Iterate over active plugins in an extension.\n   */\n  function* activePlugins(extension) {\n    // Handle commonjs or es2015 modules\n    let exports;\n    if (extension.hasOwnProperty('__esModule')) {\n      exports = extension.default;\n    } else {\n      // CommonJS exports.\n      exports = extension;\n    }\n\n    let plugins = Array.isArray(exports) ? exports : [exports];\n    for (let plugin of plugins) {\n      // skip the plugin (or extension) if disabled\n      if (\n        disabled.includes(plugin.id) ||\n        disabled.includes(plugin.id.split(':')[0])\n      ) {\n        continue;\n      }\n      yield plugin;\n    }\n  }\n\n  // Add the federated extensions.\n  const federatedExtensions = await Promise.allSettled(federatedExtensionPromises);\n  federatedExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        mods.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  app.registerPluginModules(mods);\n\n  console.log('Starting app');\n  await app.start();\n  console.log('JupyterLite Retro started, waiting for restore');\n  await app.restored;\n  console.log('JupyterLite Retro restored');\n}\n\nmain();\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/application-extension/style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n.jp-IFrameContainer iframe,\\n.jp-IFrameContainer body {\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n  border: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/iframe-extension/style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E;;AAE9E;;EAEE,SAAS;EACT,UAAU;EACV,gBAAgB;EAChB,YAAY;AACd\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n.jp-IFrameContainer iframe,\\n.jp-IFrameContainer body {\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n  border: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../packages/retro-application-extension/style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./base.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./base.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./base.css\");\ncontent = content.__esModule ? content.default : content;\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n"],"sourceRoot":""}