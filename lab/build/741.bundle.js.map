{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/observables/lib/observablejson.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/observables/lib/observablemap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/attachmentmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/factories.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/latex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/mimemodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/outputmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/renderers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime/lib/widgets.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash.escape/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/marked/lib/marked.js"],"names":["ObservableJSON","options","super","itemCmp","JSONExt","values","out","Object","create","keys","this","key","value","get","undefined","ChangeMessage","Message","type","args","Private","ObservableMap","_map","Map","_changed","Signal","_isDisposed","_itemCmp","set","size","oldVal","Error","emit","oldValue","newValue","has","keyList","forEach","v","k","push","valList","delete","i","length","isDisposed","clear","first","second","AttachmentModel","trusted","_raw","data","getData","_data","_rawData","extract","dispose","_updateObservable","attachment","observable","oldKeys","newKeys","indexOf","bundle","map","mimeType","convertBundle","item","getBundleOptions","htmlRendererFactory","safe","mimeTypes","defaultRank","createRenderer","imageRendererFactory","latexRendererFactory","markdownRendererFactory","svgRendererFactory","textRendererFactory","javaScriptRendererFactory","standardRendererFactories","MATHSPLIT","removeMath","text","math","deTilde","start","end","last","braces","test","replace","wholematch","character","blocks","split","m","block","charAt","processMath","match","slice","substr","join","replaceMath","n","group","substring","j","preProcess","navigator","appName","MimeModel","_metadata","metadata","_callback","callback","noOp","OutputModel","_rawMetadata","output_type","executionCount","execution_count","output","getMetadata","name","traceback","ename","evalue","JSON","parse","stringify","RenderMimeRegistry","_id","_ranks","_types","_factories","translator","nullTranslator","resolver","linkHandler","latexTypesetter","sanitizer","defaultSanitizer","initialFactories","factory","addFactory","sortedTypes","mt","clone","assign","rank","id","UrlResolver","path","_path","session","_session","_contents","contents","_a","url","isLocal","cwd","encodeURI","PathExt","urlPath","getDownloadUrl","decodeURIComponent","decodeURI","URLExt","driveName","sort","a","b","p1","p2","sessionConnection","s","sessionChanged","renderHTML","host","source","shouldTypeset","trans","load","promise","originalSource","textContent","Promise","resolve","sanitize","innerHTML","getElementsByTagName","evalInnerHTMLScriptTags","container","document","createElement","warning","__","runButton","onclick","event","firstChild","removeChild","appendChild","insertBefore","handleDefaults","handleUrls","then","typeset","renderImage","width","height","needsBackground","unconfined","img","src","classList","add","renderLatex","async","renderMarkdown","others","e","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","__rest","parts","html","renderMarked","headerAnchors","renderSVG","search","Image","encodeURIComponent","renderText","content","ansiSpan","allowedTags","pre","controlCodes","webLinkRegex","RegExp","lastChars","endsWithGtLt","toAppend","len","autolink","handleAttr","node","getAttribute","resolveUrl","protocol","Date","getTime","setAttribute","err","handleAnchor","anchor","href","hash","target","handleLink","catch","scripts","toArray","script","parentNode","attrs","attributes","replaceChild","markedInitialized","gfm","langPrefix","CodeMirrorEditor","highlight","code","lang","cb","Mode","spec","el","console","error","mime","reject","anchors","HTMLAnchorElement","rel","imgs","alt","promises","nodes","querySelectorAll","links","all","headerNames","headerType","headers","header","ANSI_COLORS","pushColoredChunk","chunk","fg","bg","bold","underline","inverse","classes","styles","getExtendedColors","numbers","r","g","shift","some","c","RangeError","idx","Math","floor","str","ansiRe","exec","items","parseInt","index","lastIndex","IRenderMimeRegistry","Token","ILatexTypesetter","RenderedCommon","Widget","dataset","model","toggleClass","render","fragment","setFragment","RenderedHTMLCommon","addClass","querySelector","warn","scrollIntoView","RenderedHTML","String","isAttached","msg","RenderedLatex","RenderedImage","RenderedMarkdown","RenderedSVG","RenderedText","RenderedJavaScript","object","reUnescapedHtml","reHasUnescapedHtml","freeGlobal","freeSelf","self","root","Function","escapeHtmlChar","objectToString","toString","Symbol","symbolProto","symbolToString","module","exports","string","isObjectLike","isSymbol","result","baseToString","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_arrayLikeToArray","arr","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","iterator","next","bind","isArray","minLen","constructor","from","_unsupportedIterableToArray","done","TypeError","defaults$5","getDefaults$1","baseUrl","breaks","headerIds","headerPrefix","mangle","pedantic","renderer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","getDefaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape$1","_","toLowerCase","fromCharCode","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","domain","base","rtrim$1","relativeBase","invert","l","suffLen","currChar","helpers","encode","regex","opt","obj","val","getRegex","prot","arguments","tableRow","count","cells","offset","escaped","curr","splice","trim","level","pattern","defaults$4","rtrim","splitCells","_escape","findClosingBracket","outputLink","cap","link","raw","title","Tokenizer_1","Tokenizer","_proto","space","rules","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentCodeCompensation","heading","trimmed","depth","nptable","align","hr","blockquote","list","bcurr","bnext","addBack","loose","istask","ischecked","endMatch","bull","isordered","ordered","itemMatch","listItemStart","task","checked","def","tag","table","lheading","paragraph","escape","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","min","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","tokens","prevCapZero","_backpedal","inlineText","noopTest","edit","merge$1","block$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","repeatString","charCodeAt","random","Lexer_1","Lexer","lex","lexInline","inlineTokens","Constructor","protoProps","staticProps","blockTokens","top","token","lastToken","errMsg","l2","row","keepPrevChar","includes","lastIndexOf","_lastToken","_lastToken2","defaults$2","cleanUrl","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","unescape","Parser","textRenderer","parseInline","l3","cell","itemBody","unshift","merge","checkSanitizeDeprecation","marked","pending","setTimeout","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_step","_iterator","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","parser","lexer"],"mappings":"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","file":"741.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JSONExt } from '@lumino/coreutils';\nimport { Message } from '@lumino/messaging';\nimport { ObservableMap } from './observablemap';\n/**\n * A concrete Observable map for JSON data.\n */\nexport class ObservableJSON extends ObservableMap {\n    /**\n     * Construct a new observable JSON object.\n     */\n    constructor(options = {}) {\n        super({\n            itemCmp: JSONExt.deepEqual,\n            values: options.values\n        });\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const out = Object.create(null);\n        const keys = this.keys();\n        for (const key of keys) {\n            const value = this.get(key);\n            if (value !== undefined) {\n                out[key] = JSONExt.deepCopy(value);\n            }\n        }\n        return out;\n    }\n}\n/**\n * The namespace for ObservableJSON static data.\n */\n(function (ObservableJSON) {\n    /**\n     * An observable JSON change message.\n     */\n    class ChangeMessage extends Message {\n        /**\n         * Create a new metadata changed message.\n         */\n        constructor(type, args) {\n            super(type);\n            this.args = args;\n        }\n    }\n    ObservableJSON.ChangeMessage = ChangeMessage;\n})(ObservableJSON || (ObservableJSON = {}));\n//# sourceMappingURL=observablejson.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\n/**\n * A concrete implementation of IObservbleMap<T>.\n */\nexport class ObservableMap {\n    /**\n     * Construct a new observable map.\n     */\n    constructor(options = {}) {\n        this._map = new Map();\n        this._changed = new Signal(this);\n        this._isDisposed = false;\n        this._itemCmp = options.itemCmp || Private.itemCmp;\n        if (options.values) {\n            for (const key in options.values) {\n                this._map.set(key, options.values[key]);\n            }\n        }\n    }\n    /**\n     * The type of the Observable.\n     */\n    get type() {\n        return 'Map';\n    }\n    /**\n     * A signal emitted when the map has changed.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Whether this map has been disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * The number of key-value pairs in the map.\n     */\n    get size() {\n        return this._map.size;\n    }\n    /**\n     * Set a key-value pair in the map\n     *\n     * @param key - The key to set.\n     *\n     * @param value - The value for the key.\n     *\n     * @returns the old value for the key, or undefined\n     *   if that did not exist.\n     *\n     * @throws if the new value is undefined.\n     *\n     * #### Notes\n     * This is a no-op if the value does not change.\n     */\n    set(key, value) {\n        const oldVal = this._map.get(key);\n        if (value === undefined) {\n            throw Error('Cannot set an undefined value, use remove');\n        }\n        // Bail if the value does not change.\n        const itemCmp = this._itemCmp;\n        if (oldVal !== undefined && itemCmp(oldVal, value)) {\n            return oldVal;\n        }\n        this._map.set(key, value);\n        this._changed.emit({\n            type: oldVal ? 'change' : 'add',\n            key: key,\n            oldValue: oldVal,\n            newValue: value\n        });\n        return oldVal;\n    }\n    /**\n     * Get a value for a given key.\n     *\n     * @param key - the key.\n     *\n     * @returns the value for that key.\n     */\n    get(key) {\n        return this._map.get(key);\n    }\n    /**\n     * Check whether the map has a key.\n     *\n     * @param key - the key to check.\n     *\n     * @returns `true` if the map has the key, `false` otherwise.\n     */\n    has(key) {\n        return this._map.has(key);\n    }\n    /**\n     * Get a list of the keys in the map.\n     *\n     * @returns - a list of keys.\n     */\n    keys() {\n        const keyList = [];\n        this._map.forEach((v, k) => {\n            keyList.push(k);\n        });\n        return keyList;\n    }\n    /**\n     * Get a list of the values in the map.\n     *\n     * @returns - a list of values.\n     */\n    values() {\n        const valList = [];\n        this._map.forEach((v, k) => {\n            valList.push(v);\n        });\n        return valList;\n    }\n    /**\n     * Remove a key from the map\n     *\n     * @param key - the key to remove.\n     *\n     * @returns the value of the given key,\n     *   or undefined if that does not exist.\n     *\n     * #### Notes\n     * This is a no-op if the value does not change.\n     */\n    delete(key) {\n        const oldVal = this._map.get(key);\n        const removed = this._map.delete(key);\n        if (removed) {\n            this._changed.emit({\n                type: 'remove',\n                key: key,\n                oldValue: oldVal,\n                newValue: undefined\n            });\n        }\n        return oldVal;\n    }\n    /**\n     * Set the ObservableMap to an empty map.\n     */\n    clear() {\n        // Delete one by one to emit the correct signals.\n        const keyList = this.keys();\n        for (let i = 0; i < keyList.length; i++) {\n            this.delete(keyList[i]);\n        }\n    }\n    /**\n     * Dispose of the resources held by the map.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n        this._map.clear();\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The default strict equality item comparator.\n     */\n    function itemCmp(first, second) {\n        return first === second;\n    }\n    Private.itemCmp = itemCmp;\n})(Private || (Private = {}));\n//# sourceMappingURL=observablemap.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { ObservableJSON } from '@jupyterlab/observables';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\n/**\n * The default implementation of a notebook attachment model.\n */\nexport class AttachmentModel {\n    /**\n     * Construct a new attachment model.\n     */\n    constructor(options) {\n        // All attachments are untrusted\n        this.trusted = false;\n        this._changed = new Signal(this);\n        this._raw = {};\n        const data = Private.getData(options.value);\n        this._data = new ObservableJSON({ values: data });\n        this._rawData = data;\n        // Make a copy of the data.\n        const value = options.value;\n        for (const key in value) {\n            // Ignore data and metadata that were stripped.\n            switch (key) {\n                case 'data':\n                    break;\n                default:\n                    this._raw[key] = Private.extract(value, key);\n            }\n        }\n    }\n    /**\n     * A signal emitted when the attachment model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources used by the attachment model.\n     */\n    dispose() {\n        this._data.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._rawData;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return {};\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        if (options.data) {\n            this._updateObservable(this._data, options.data);\n            this._rawData = options.data;\n        }\n        this._changed.emit(void 0);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const attachment = {};\n        for (const key in this._raw) {\n            attachment[key] = Private.extract(this._raw, key);\n        }\n        return attachment;\n    }\n    /**\n     * Update an observable JSON object using a readonly JSON object.\n     */\n    _updateObservable(observable, data) {\n        const oldKeys = observable.keys();\n        const newKeys = Object.keys(data);\n        // Handle removed keys.\n        for (const key of oldKeys) {\n            if (newKeys.indexOf(key) === -1) {\n                observable.delete(key);\n            }\n        }\n        // Handle changed data.\n        for (const key of newKeys) {\n            const oldValue = observable.get(key);\n            const newValue = data[key];\n            if (oldValue !== newValue) {\n                observable.set(key, newValue);\n            }\n        }\n    }\n}\n/**\n * The namespace for AttachmentModel statics.\n */\n(function (AttachmentModel) {\n    /**\n     * Get the data for an attachment.\n     *\n     * @params bundle - A kernel attachment MIME bundle.\n     *\n     * @returns - The data for the payload.\n     */\n    function getData(bundle) {\n        return Private.getData(bundle);\n    }\n    AttachmentModel.getData = getData;\n})(AttachmentModel || (AttachmentModel = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the data from a notebook attachment.\n     */\n    function getData(bundle) {\n        return convertBundle(bundle);\n    }\n    Private.getData = getData;\n    /**\n     * Get the bundle options given attachment model options.\n     */\n    function getBundleOptions(options) {\n        const data = getData(options.value);\n        return { data };\n    }\n    Private.getBundleOptions = getBundleOptions;\n    /**\n     * Extract a value from a JSONObject.\n     */\n    function extract(value, key) {\n        const item = value[key];\n        if (item === undefined || JSONExt.isPrimitive(item)) {\n            return item;\n        }\n        return JSONExt.deepCopy(item);\n    }\n    Private.extract = extract;\n    /**\n     * Convert a mime bundle to mime data.\n     */\n    function convertBundle(bundle) {\n        const map = Object.create(null);\n        for (const mimeType in bundle) {\n            map[mimeType] = extract(bundle, mimeType);\n        }\n        return map;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=attachmentmodel.js.map","import * as widgets from './widgets';\n/**\n * A mime renderer factory for raw html.\n */\nexport const htmlRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/html'],\n    defaultRank: 50,\n    createRenderer: options => new widgets.RenderedHTML(options)\n};\n/**\n * A mime renderer factory for images.\n */\nexport const imageRendererFactory = {\n    safe: true,\n    mimeTypes: ['image/bmp', 'image/png', 'image/jpeg', 'image/gif'],\n    defaultRank: 90,\n    createRenderer: options => new widgets.RenderedImage(options)\n};\n/**\n * A mime renderer factory for LaTeX.\n */\nexport const latexRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/latex'],\n    defaultRank: 70,\n    createRenderer: options => new widgets.RenderedLatex(options)\n};\n/**\n * A mime renderer factory for Markdown.\n */\nexport const markdownRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/markdown'],\n    defaultRank: 60,\n    createRenderer: options => new widgets.RenderedMarkdown(options)\n};\n/**\n * A mime renderer factory for svg.\n */\nexport const svgRendererFactory = {\n    safe: false,\n    mimeTypes: ['image/svg+xml'],\n    defaultRank: 80,\n    createRenderer: options => new widgets.RenderedSVG(options)\n};\n/**\n * A mime renderer factory for plain and jupyter console text data.\n */\nexport const textRendererFactory = {\n    safe: true,\n    mimeTypes: [\n        'text/plain',\n        'application/vnd.jupyter.stdout',\n        'application/vnd.jupyter.stderr'\n    ],\n    defaultRank: 120,\n    createRenderer: options => new widgets.RenderedText(options)\n};\n/**\n * A placeholder factory for rendered JavaScript.\n */\nexport const javaScriptRendererFactory = {\n    safe: false,\n    mimeTypes: ['text/javascript', 'application/javascript'],\n    defaultRank: 110,\n    createRenderer: options => new widgets.RenderedJavaScript(options)\n};\n/**\n * The standard factories provided by the rendermime package.\n */\nexport const standardRendererFactories = [\n    htmlRendererFactory,\n    markdownRendererFactory,\n    latexRendererFactory,\n    svgRendererFactory,\n    imageRendererFactory,\n    javaScriptRendererFactory,\n    textRendererFactory\n];\n//# sourceMappingURL=factories.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n// Some magic for deferring mathematical expressions to MathJax\n// by hiding them from the Markdown parser.\n// Some of the code here is adapted with permission from Davide Cervone\n// under the terms of the Apache2 license governing the MathJax project.\n// Other minor modifications are also due to StackExchange and are used with\n// permission.\nconst inline = '$'; // the inline math delimiter\n// MATHSPLIT contains the pattern for math delimiters and special symbols\n// needed for searching for math in the text input.\nconst MATHSPLIT = /(\\$\\$?|\\\\(?:begin|end)\\{[a-z]*\\*?\\}|\\\\[{}$]|[{}]|(?:\\n\\s*)+|@@\\d+@@|\\\\\\\\(?:\\(|\\)|\\[|\\]))/i;\n/**\n *  Break up the text into its component parts and search\n *    through them for math delimiters, braces, linebreaks, etc.\n *  Math delimiters must match and braces must balance.\n *  Don't allow math to pass through a double linebreak\n *    (which will be a paragraph).\n */\nexport function removeMath(text) {\n    const math = []; // stores math strings for later\n    let start = null;\n    let end = null;\n    let last = null;\n    let braces = 0;\n    let deTilde;\n    // Except for extreme edge cases, this should catch precisely those pieces of the markdown\n    // source that will later be turned into code spans. While MathJax will not TeXify code spans,\n    // we still have to consider them at this point; the following issue has happened several times:\n    //\n    //     `$foo` and `$bar` are variables.  -->  <code>$foo ` and `$bar</code> are variables.\n    const hasCodeSpans = /`/.test(text);\n    if (hasCodeSpans) {\n        text = text\n            .replace(/~/g, '~T')\n            .replace(/(^|[^\\\\])(`+)([^\\n]*?[^`\\n])\\2(?!`)/gm, wholematch => wholematch.replace(/\\$/g, '~D'));\n        deTilde = (text) => {\n            return text.replace(/~([TD])/g, (wholematch, character) => character === 'T' ? '~' : inline);\n        };\n    }\n    else {\n        deTilde = (text) => {\n            return text;\n        };\n    }\n    let blocks = text.replace(/\\r\\n?/g, '\\n').split(MATHSPLIT);\n    for (let i = 1, m = blocks.length; i < m; i += 2) {\n        const block = blocks[i];\n        if (block.charAt(0) === '@') {\n            //\n            //  Things that look like our math markers will get\n            //  stored and then retrieved along with the math.\n            //\n            blocks[i] = '@@' + math.length + '@@';\n            math.push(block);\n        }\n        else if (start !== null) {\n            //\n            //  If we are in math, look for the end delimiter,\n            //    but don't go past double line breaks, and\n            //    and balance braces within the math.\n            //\n            if (block === end) {\n                if (braces) {\n                    last = i;\n                }\n                else {\n                    blocks = processMath(start, i, deTilde, math, blocks);\n                    start = null;\n                    end = null;\n                    last = null;\n                }\n            }\n            else if (block.match(/\\n.*\\n/)) {\n                if (last !== null) {\n                    i = last;\n                    blocks = processMath(start, i, deTilde, math, blocks);\n                }\n                start = null;\n                end = null;\n                last = null;\n                braces = 0;\n            }\n            else if (block === '{') {\n                braces++;\n            }\n            else if (block === '}' && braces) {\n                braces--;\n            }\n        }\n        else {\n            //\n            //  Look for math start delimiters and when\n            //    found, set up the end delimiter.\n            //\n            if (block === inline || block === '$$') {\n                start = i;\n                end = block;\n                braces = 0;\n            }\n            else if (block === '\\\\\\\\(' || block === '\\\\\\\\[') {\n                start = i;\n                end = block.slice(-1) === '(' ? '\\\\\\\\)' : '\\\\\\\\]';\n                braces = 0;\n            }\n            else if (block.substr(1, 5) === 'begin') {\n                start = i;\n                end = '\\\\end' + block.substr(6);\n                braces = 0;\n            }\n        }\n    }\n    if (start !== null && last !== null) {\n        blocks = processMath(start, last, deTilde, math, blocks);\n        start = null;\n        end = null;\n        last = null;\n    }\n    return { text: deTilde(blocks.join('')), math };\n}\n/**\n * Put back the math strings that were saved,\n * and clear the math array (no need to keep it around).\n */\nexport function replaceMath(text, math) {\n    /**\n     * Replace a math placeholder with its corresponding group.\n     * The math delimiters \"\\\\(\", \"\\\\[\", \"\\\\)\" and \"\\\\]\" are replaced\n     * removing one backslash in order to be interpreted correctly by MathJax.\n     */\n    const process = (match, n) => {\n        let group = math[n];\n        if (group.substr(0, 3) === '\\\\\\\\(' &&\n            group.substr(group.length - 3) === '\\\\\\\\)') {\n            group = '\\\\(' + group.substring(3, group.length - 3) + '\\\\)';\n        }\n        else if (group.substr(0, 3) === '\\\\\\\\[' &&\n            group.substr(group.length - 3) === '\\\\\\\\]') {\n            group = '\\\\[' + group.substring(3, group.length - 3) + '\\\\]';\n        }\n        return group;\n    };\n    // Replace all the math group placeholders in the text\n    // with the saved strings.\n    return text.replace(/@@(\\d+)@@/g, process);\n}\n/**\n * Process math blocks.\n *\n * The math is in blocks i through j, so\n *   collect it into one block and clear the others.\n *  Replace &, <, and > by named entities.\n *  For IE, put <br> at the ends of comments since IE removes \\n.\n *  Clear the current math positions and store the index of the\n *   math, then push the math string onto the storage array.\n *  The preProcess function is called on all blocks if it has been passed in\n */\nfunction processMath(i, j, preProcess, math, blocks) {\n    let block = blocks\n        .slice(i, j + 1)\n        .join('')\n        .replace(/&/g, '&amp;') // use HTML entity for &\n        .replace(/</g, '&lt;') // use HTML entity for <\n        .replace(/>/g, '&gt;'); // use HTML entity for >\n    if (navigator && navigator.appName === 'Microsoft Internet Explorer') {\n        block = block.replace(/(%[^\\n]*)\\n/g, '$1<br/>\\n');\n    }\n    while (j > i) {\n        blocks[j] = '';\n        j--;\n    }\n    blocks[i] = '@@' + math.length + '@@'; // replace the current block text with a unique tag to find later\n    if (preProcess) {\n        block = preProcess(block);\n    }\n    math.push(block);\n    return blocks;\n}\n//# sourceMappingURL=latex.js.map","/**\n * The default mime model implementation.\n */\nexport class MimeModel {\n    /**\n     * Construct a new mime model.\n     */\n    constructor(options = {}) {\n        this.trusted = !!options.trusted;\n        this._data = options.data || {};\n        this._metadata = options.metadata || {};\n        this._callback = options.callback || Private.noOp;\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._data;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return this._metadata;\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        this._data = options.data || this._data;\n        this._metadata = options.metadata || this._metadata;\n        this._callback(options);\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A no-op callback function.\n     */\n    function noOp() {\n        /* no-op */\n    }\n    Private.noOp = noOp;\n})(Private || (Private = {}));\n//# sourceMappingURL=mimemodel.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { ObservableJSON } from '@jupyterlab/observables';\n/**\n * The default implementation of a notebook output model.\n */\nexport class OutputModel {\n    /**\n     * Construct a new output model.\n     */\n    constructor(options) {\n        this._changed = new Signal(this);\n        this._raw = {};\n        const { data, metadata, trusted } = Private.getBundleOptions(options);\n        this._data = new ObservableJSON({ values: data });\n        this._rawData = data;\n        this._metadata = new ObservableJSON({ values: metadata });\n        this._rawMetadata = metadata;\n        this.trusted = trusted;\n        // Make a copy of the data.\n        const value = options.value;\n        for (const key in value) {\n            // Ignore data and metadata that were stripped.\n            switch (key) {\n                case 'data':\n                case 'metadata':\n                    break;\n                default:\n                    this._raw[key] = Private.extract(value, key);\n            }\n        }\n        this.type = value.output_type;\n        if (nbformat.isExecuteResult(value)) {\n            this.executionCount = value.execution_count;\n        }\n        else {\n            this.executionCount = null;\n        }\n    }\n    /**\n     * A signal emitted when the output model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources used by the output model.\n     */\n    dispose() {\n        this._data.dispose();\n        this._metadata.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._rawData;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return this._rawMetadata;\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        if (options.data) {\n            this._updateObservable(this._data, options.data);\n            this._rawData = options.data;\n        }\n        if (options.metadata) {\n            this._updateObservable(this._metadata, options.metadata);\n            this._rawMetadata = options.metadata;\n        }\n        this._changed.emit(void 0);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const output = {};\n        for (const key in this._raw) {\n            output[key] = Private.extract(this._raw, key);\n        }\n        switch (this.type) {\n            case 'display_data':\n            case 'execute_result':\n            case 'update_display_data':\n                output['data'] = this.data;\n                output['metadata'] = this.metadata;\n                break;\n            default:\n                break;\n        }\n        // Remove transient data.\n        delete output['transient'];\n        return output;\n    }\n    /**\n     * Update an observable JSON object using a readonly JSON object.\n     */\n    _updateObservable(observable, data) {\n        const oldKeys = observable.keys();\n        const newKeys = Object.keys(data);\n        // Handle removed keys.\n        for (const key of oldKeys) {\n            if (newKeys.indexOf(key) === -1) {\n                observable.delete(key);\n            }\n        }\n        // Handle changed data.\n        for (const key of newKeys) {\n            const oldValue = observable.get(key);\n            const newValue = data[key];\n            if (oldValue !== newValue) {\n                observable.set(key, newValue);\n            }\n        }\n    }\n}\n/**\n * The namespace for OutputModel statics.\n */\n(function (OutputModel) {\n    /**\n     * Get the data for an output.\n     *\n     * @params output - A kernel output message payload.\n     *\n     * @returns - The data for the payload.\n     */\n    function getData(output) {\n        return Private.getData(output);\n    }\n    OutputModel.getData = getData;\n    /**\n     * Get the metadata from an output message.\n     *\n     * @params output - A kernel output message payload.\n     *\n     * @returns - The metadata for the payload.\n     */\n    function getMetadata(output) {\n        return Private.getMetadata(output);\n    }\n    OutputModel.getMetadata = getMetadata;\n})(OutputModel || (OutputModel = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the data from a notebook output.\n     */\n    function getData(output) {\n        let bundle = {};\n        if (nbformat.isExecuteResult(output) ||\n            nbformat.isDisplayData(output) ||\n            nbformat.isDisplayUpdate(output)) {\n            bundle = output.data;\n        }\n        else if (nbformat.isStream(output)) {\n            if (output.name === 'stderr') {\n                bundle['application/vnd.jupyter.stderr'] = output.text;\n            }\n            else {\n                bundle['application/vnd.jupyter.stdout'] = output.text;\n            }\n        }\n        else if (nbformat.isError(output)) {\n            bundle['application/vnd.jupyter.error'] = output;\n            const traceback = output.traceback.join('\\n');\n            bundle['application/vnd.jupyter.stderr'] =\n                traceback || `${output.ename}: ${output.evalue}`;\n        }\n        return convertBundle(bundle);\n    }\n    Private.getData = getData;\n    /**\n     * Get the metadata from an output message.\n     */\n    function getMetadata(output) {\n        const value = Object.create(null);\n        if (nbformat.isExecuteResult(output) || nbformat.isDisplayData(output)) {\n            for (const key in output.metadata) {\n                value[key] = extract(output.metadata, key);\n            }\n        }\n        return value;\n    }\n    Private.getMetadata = getMetadata;\n    /**\n     * Get the bundle options given output model options.\n     */\n    function getBundleOptions(options) {\n        const data = getData(options.value);\n        const metadata = getMetadata(options.value);\n        const trusted = !!options.trusted;\n        return { data, metadata, trusted };\n    }\n    Private.getBundleOptions = getBundleOptions;\n    /**\n     * Extract a value from a JSONObject.\n     */\n    function extract(value, key) {\n        const item = value[key];\n        if (item === undefined || JSONExt.isPrimitive(item)) {\n            return item;\n        }\n        return JSON.parse(JSON.stringify(item));\n    }\n    Private.extract = extract;\n    /**\n     * Convert a mime bundle to mime data.\n     */\n    function convertBundle(bundle) {\n        const map = Object.create(null);\n        for (const mimeType in bundle) {\n            map[mimeType] = extract(bundle, mimeType);\n        }\n        return map;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=outputmodel.js.map","import { PathExt, URLExt } from '@jupyterlab/coreutils';\nimport { defaultSanitizer } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { MimeModel } from './mimemodel';\n/**\n * An object which manages mime renderer factories.\n *\n * This object is used to render mime models using registered mime\n * renderers, selecting the preferred mime renderer to render the\n * model into a widget.\n *\n * #### Notes\n * This class is not intended to be subclassed.\n */\nexport class RenderMimeRegistry {\n    /**\n     * Construct a new rendermime.\n     *\n     * @param options - The options for initializing the instance.\n     */\n    constructor(options = {}) {\n        this._id = 0;\n        this._ranks = {};\n        this._types = null;\n        this._factories = {};\n        // Parse the options.\n        this.translator = options.translator || nullTranslator;\n        this.resolver = options.resolver || null;\n        this.linkHandler = options.linkHandler || null;\n        this.latexTypesetter = options.latexTypesetter || null;\n        this.sanitizer = options.sanitizer || defaultSanitizer;\n        // Add the initial factories.\n        if (options.initialFactories) {\n            for (const factory of options.initialFactories) {\n                this.addFactory(factory);\n            }\n        }\n    }\n    /**\n     * The ordered list of mimeTypes.\n     */\n    get mimeTypes() {\n        return this._types || (this._types = Private.sortedTypes(this._ranks));\n    }\n    /**\n     * Find the preferred mime type for a mime bundle.\n     *\n     * @param bundle - The bundle of mime data.\n     *\n     * @param safe - How to consider safe/unsafe factories. If 'ensure',\n     *   it will only consider safe factories. If 'any', any factory will be\n     *   considered. If 'prefer', unsafe factories will be considered, but\n     *   only after the safe options have been exhausted.\n     *\n     * @returns The preferred mime type from the available factories,\n     *   or `undefined` if the mime type cannot be rendered.\n     */\n    preferredMimeType(bundle, safe = 'ensure') {\n        // Try to find a safe factory first, if preferred.\n        if (safe === 'ensure' || safe === 'prefer') {\n            for (const mt of this.mimeTypes) {\n                if (mt in bundle && this._factories[mt].safe) {\n                    return mt;\n                }\n            }\n        }\n        if (safe !== 'ensure') {\n            // Otherwise, search for the best factory among all factories.\n            for (const mt of this.mimeTypes) {\n                if (mt in bundle) {\n                    return mt;\n                }\n            }\n        }\n        // Otherwise, no matching mime type exists.\n        return undefined;\n    }\n    /**\n     * Create a renderer for a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns A new renderer for the given mime type.\n     *\n     * @throws An error if no factory exists for the mime type.\n     */\n    createRenderer(mimeType) {\n        // Throw an error if no factory exists for the mime type.\n        if (!(mimeType in this._factories)) {\n            throw new Error(`No factory for mime type: '${mimeType}'`);\n        }\n        // Invoke the best factory for the given mime type.\n        return this._factories[mimeType].createRenderer({\n            mimeType,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            latexTypesetter: this.latexTypesetter,\n            translator: this.translator\n        });\n    }\n    /**\n     * Create a new mime model.  This is a convenience method.\n     *\n     * @options - The options used to create the model.\n     *\n     * @returns A new mime model.\n     */\n    createModel(options = {}) {\n        return new MimeModel(options);\n    }\n    /**\n     * Create a clone of this rendermime instance.\n     *\n     * @param options - The options for configuring the clone.\n     *\n     * @returns A new independent clone of the rendermime.\n     */\n    clone(options = {}) {\n        // Create the clone.\n        const clone = new RenderMimeRegistry({\n            resolver: options.resolver || this.resolver || undefined,\n            sanitizer: options.sanitizer || this.sanitizer || undefined,\n            linkHandler: options.linkHandler || this.linkHandler || undefined,\n            latexTypesetter: options.latexTypesetter || this.latexTypesetter || undefined,\n            translator: this.translator\n        });\n        // Clone the internal state.\n        clone._factories = Object.assign({}, this._factories);\n        clone._ranks = Object.assign({}, this._ranks);\n        clone._id = this._id;\n        // Return the cloned object.\n        return clone;\n    }\n    /**\n     * Get the renderer factory registered for a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns The factory for the mime type, or `undefined`.\n     */\n    getFactory(mimeType) {\n        return this._factories[mimeType];\n    }\n    /**\n     * Add a renderer factory to the rendermime.\n     *\n     * @param factory - The renderer factory of interest.\n     *\n     * @param rank - The rank of the renderer. A lower rank indicates\n     *   a higher priority for rendering. If not given, the rank will\n     *   defer to the `defaultRank` of the factory.  If no `defaultRank`\n     *   is given, it will default to 100.\n     *\n     * #### Notes\n     * The renderer will replace an existing renderer for the given\n     * mimeType.\n     */\n    addFactory(factory, rank) {\n        if (rank === undefined) {\n            rank = factory.defaultRank;\n            if (rank === undefined) {\n                rank = 100;\n            }\n        }\n        for (const mt of factory.mimeTypes) {\n            this._factories[mt] = factory;\n            this._ranks[mt] = { rank, id: this._id++ };\n        }\n        this._types = null;\n    }\n    /**\n     * Remove a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     */\n    removeMimeType(mimeType) {\n        delete this._factories[mimeType];\n        delete this._ranks[mimeType];\n        this._types = null;\n    }\n    /**\n     * Get the rank for a given mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns The rank of the mime type or undefined.\n     */\n    getRank(mimeType) {\n        const rank = this._ranks[mimeType];\n        return rank && rank.rank;\n    }\n    /**\n     * Set the rank of a given mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @param rank - The new rank to assign.\n     *\n     * #### Notes\n     * This is a no-op if the mime type is not registered.\n     */\n    setRank(mimeType, rank) {\n        if (!this._ranks[mimeType]) {\n            return;\n        }\n        const id = this._id++;\n        this._ranks[mimeType] = { rank, id };\n        this._types = null;\n    }\n}\n/**\n * The namespace for `RenderMimeRegistry` class statics.\n */\n(function (RenderMimeRegistry) {\n    /**\n     * A default resolver that uses a given reference path and a contents manager.\n     */\n    class UrlResolver {\n        /**\n         * Create a new url resolver.\n         */\n        constructor(options) {\n            if (options.path) {\n                this._path = options.path;\n            }\n            else if (options.session) {\n                this._session = options.session;\n            }\n            else {\n                throw new Error(\"Either 'path' or 'session' must be given as a constructor option\");\n            }\n            this._contents = options.contents;\n        }\n        /**\n         * The path of the object, from which local urls can be derived.\n         */\n        get path() {\n            var _a;\n            return (_a = this._path) !== null && _a !== void 0 ? _a : this._session.path;\n        }\n        set path(value) {\n            this._path = value;\n        }\n        /**\n         * Resolve a relative url to an absolute url path.\n         */\n        async resolveUrl(url) {\n            if (this.isLocal(url)) {\n                const cwd = encodeURI(PathExt.dirname(this.path));\n                url = PathExt.resolve(cwd, url);\n            }\n            return url;\n        }\n        /**\n         * Get the download url of a given absolute url path.\n         *\n         * #### Notes\n         * The returned URL may include a query parameter.\n         */\n        async getDownloadUrl(urlPath) {\n            if (this.isLocal(urlPath)) {\n                // decode url->path before passing to contents api\n                return this._contents.getDownloadUrl(decodeURIComponent(urlPath));\n            }\n            return urlPath;\n        }\n        /**\n         * Whether the URL should be handled by the resolver\n         * or not.\n         *\n         * #### Notes\n         * This is similar to the `isLocal` check in `URLExt`,\n         * but it also checks whether the path points to any\n         * of the `IDrive`s that may be registered with the contents\n         * manager.\n         */\n        isLocal(url) {\n            const path = decodeURI(url);\n            return URLExt.isLocal(url) || !!this._contents.driveName(path);\n        }\n    }\n    RenderMimeRegistry.UrlResolver = UrlResolver;\n})(RenderMimeRegistry || (RenderMimeRegistry = {}));\n/**\n * The namespace for the module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the mime types in the map, ordered by rank.\n     */\n    function sortedTypes(map) {\n        return Object.keys(map).sort((a, b) => {\n            const p1 = map[a];\n            const p2 = map[b];\n            if (p1.rank !== p2.rank) {\n                return p1.rank - p2.rank;\n            }\n            return p1.id - p2.id;\n        });\n    }\n    Private.sortedTypes = sortedTypes;\n    function sessionConnection(s) {\n        return s.sessionChanged\n            ? s.session\n            : s;\n    }\n    Private.sessionConnection = sessionConnection;\n})(Private || (Private = {}));\n//# sourceMappingURL=registry.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport marked from 'marked';\nimport { Mode, CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { toArray } from '@lumino/algorithm';\nimport escape from 'lodash.escape';\nimport { removeMath, replaceMath } from './latex';\n/**\n * Render HTML into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderHTML(options) {\n    // Unpack the options.\n    let { host, source, trusted, sanitizer, resolver, linkHandler, shouldTypeset, latexTypesetter, translator } = options;\n    translator = translator || nullTranslator;\n    const trans = translator === null || translator === void 0 ? void 0 : translator.load('jupyterlab');\n    let originalSource = source;\n    // Bail early if the source is empty.\n    if (!source) {\n        host.textContent = '';\n        return Promise.resolve(undefined);\n    }\n    // Sanitize the source if it is not trusted. This removes all\n    // `<script>` tags as well as other potentially harmful HTML.\n    if (!trusted) {\n        originalSource = `${source}`;\n        source = sanitizer.sanitize(source);\n    }\n    // Set the inner HTML of the host.\n    host.innerHTML = source;\n    if (host.getElementsByTagName('script').length > 0) {\n        // If output it trusted, eval any script tags contained in the HTML.\n        // This is not done automatically by the browser when script tags are\n        // created by setting `innerHTML`.\n        if (trusted) {\n            Private.evalInnerHTMLScriptTags(host);\n        }\n        else {\n            const container = document.createElement('div');\n            const warning = document.createElement('pre');\n            warning.textContent = trans.__('This HTML output contains inline scripts. Are you sure that you want to run arbitrary Javascript within your JupyterLab session?');\n            const runButton = document.createElement('button');\n            runButton.textContent = trans.__('Run');\n            runButton.onclick = event => {\n                host.innerHTML = originalSource;\n                Private.evalInnerHTMLScriptTags(host);\n                if (host.firstChild) {\n                    host.removeChild(host.firstChild);\n                }\n            };\n            container.appendChild(warning);\n            container.appendChild(runButton);\n            host.insertBefore(container, host.firstChild);\n        }\n    }\n    // Handle default behavior of nodes.\n    Private.handleDefaults(host, resolver);\n    // Patch the urls if a resolver is available.\n    let promise;\n    if (resolver) {\n        promise = Private.handleUrls(host, resolver, linkHandler);\n    }\n    else {\n        promise = Promise.resolve(undefined);\n    }\n    // Return the final rendered promise.\n    return promise.then(() => {\n        if (shouldTypeset && latexTypesetter) {\n            latexTypesetter.typeset(host);\n        }\n    });\n}\n/**\n * Render an image into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderImage(options) {\n    // Unpack the options.\n    const { host, mimeType, source, width, height, needsBackground, unconfined } = options;\n    // Clear the content in the host.\n    host.textContent = '';\n    // Create the image element.\n    const img = document.createElement('img');\n    // Set the source of the image.\n    img.src = `data:${mimeType};base64,${source}`;\n    // Set the size of the image if provided.\n    if (typeof height === 'number') {\n        img.height = height;\n    }\n    if (typeof width === 'number') {\n        img.width = width;\n    }\n    if (needsBackground === 'light') {\n        img.classList.add('jp-needs-light-background');\n    }\n    else if (needsBackground === 'dark') {\n        img.classList.add('jp-needs-dark-background');\n    }\n    if (unconfined === true) {\n        img.classList.add('jp-mod-unconfined');\n    }\n    // Add the image to the host.\n    host.appendChild(img);\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * Render LaTeX into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderLatex(options) {\n    // Unpack the options.\n    const { host, source, shouldTypeset, latexTypesetter } = options;\n    // Set the source on the node.\n    host.textContent = source;\n    // Typeset the node if needed.\n    if (shouldTypeset && latexTypesetter) {\n        latexTypesetter.typeset(host);\n    }\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * Render Markdown into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport async function renderMarkdown(options) {\n    // Unpack the options.\n    const { host, source } = options, others = __rest(options, [\"host\", \"source\"]);\n    // Clear the content if there is no source.\n    if (!source) {\n        host.textContent = '';\n        return;\n    }\n    // Separate math from normal markdown text.\n    const parts = removeMath(source);\n    // Convert the markdown to HTML.\n    let html = await Private.renderMarked(parts['text']);\n    // Replace math.\n    html = replaceMath(html, parts['math']);\n    // Render HTML.\n    await renderHTML(Object.assign({ host, source: html }, others));\n    // Apply ids to the header nodes.\n    Private.headerAnchors(host);\n}\n/**\n * Render SVG into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderSVG(options) {\n    // Unpack the options.\n    let { host, source, trusted, unconfined } = options;\n    // Clear the content if there is no source.\n    if (!source) {\n        host.textContent = '';\n        return Promise.resolve(undefined);\n    }\n    // Display a message if the source is not trusted.\n    if (!trusted) {\n        host.textContent =\n            'Cannot display an untrusted SVG. Maybe you need to run the cell?';\n        return Promise.resolve(undefined);\n    }\n    // Add missing SVG namespace (if actually missing)\n    const patt = '<svg[^>]+xmlns=[^>]+svg';\n    if (source.search(patt) < 0) {\n        source = source.replace('<svg', '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n    }\n    // Render in img so that user can save it easily\n    const img = new Image();\n    img.src = `data:image/svg+xml,${encodeURIComponent(source)}`;\n    host.appendChild(img);\n    if (unconfined === true) {\n        host.classList.add('jp-mod-unconfined');\n    }\n    return Promise.resolve();\n}\n/**\n * Replace URLs with links.\n *\n * @param content - The plain text content.\n *\n * @returns The content where all URLs have been replaced with corresponding links.\n */\nfunction autolink(content) {\n    // Taken from Visual Studio Code:\n    // https://github.com/microsoft/vscode/blob/9f709d170b06e991502153f281ec3c012add2e42/src/vs/workbench/contrib/debug/browser/linkDetector.ts#L17-L18\n    const controlCodes = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\n    const webLinkRegex = new RegExp('(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s' +\n        controlCodes +\n        '\"]{2,}[^\\\\s' +\n        controlCodes +\n        '\"\\'(){}\\\\[\\\\],:;.!?]', 'ug');\n    return content.replace(webLinkRegex, url => {\n        // Special case when the URL ends with \">\" or \"<\"\n        const lastChars = url.slice(-3);\n        const endsWithGtLt = ['&gt', '&lt'].indexOf(lastChars) !== -1;\n        const toAppend = endsWithGtLt ? lastChars : '';\n        const len = endsWithGtLt ? url.length - 3 : url.length;\n        return (`<a href=\"${url.slice(0, len)}\" rel=\"noopener\" target=\"_blank\">` +\n            `${url.slice(0, len)}</a>${toAppend}`);\n    });\n}\n/**\n * Render text into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderText(options) {\n    // Unpack the options.\n    const { host, sanitizer, source } = options;\n    // Create the HTML content.\n    const content = sanitizer.sanitize(Private.ansiSpan(source), {\n        allowedTags: ['span']\n    });\n    // Set the sanitized content for the host node.\n    const pre = document.createElement('pre');\n    pre.innerHTML = autolink(content);\n    host.appendChild(pre);\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * The namespace for module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Eval the script tags contained in a host populated by `innerHTML`.\n     *\n     * When script tags are created via `innerHTML`, the browser does not\n     * evaluate them when they are added to the page. This function works\n     * around that by creating new equivalent script nodes manually, and\n     * replacing the originals.\n     */\n    function evalInnerHTMLScriptTags(host) {\n        // Create a snapshot of the current script nodes.\n        const scripts = toArray(host.getElementsByTagName('script'));\n        // Loop over each script node.\n        for (const script of scripts) {\n            // Skip any scripts which no longer have a parent.\n            if (!script.parentNode) {\n                continue;\n            }\n            // Create a new script node which will be clone.\n            const clone = document.createElement('script');\n            // Copy the attributes into the clone.\n            const attrs = script.attributes;\n            for (let i = 0, n = attrs.length; i < n; ++i) {\n                const { name, value } = attrs[i];\n                clone.setAttribute(name, value);\n            }\n            // Copy the text content into the clone.\n            clone.textContent = script.textContent;\n            // Replace the old script in the parent.\n            script.parentNode.replaceChild(clone, script);\n        }\n    }\n    Private.evalInnerHTMLScriptTags = evalInnerHTMLScriptTags;\n    /**\n     * Render markdown for the specified content.\n     *\n     * @param content - The string of markdown to render.\n     *\n     * @return A promise which resolves with the rendered content.\n     */\n    function renderMarked(content) {\n        initializeMarked();\n        return new Promise((resolve, reject) => {\n            marked(content, (err, content) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(content);\n                }\n            });\n        });\n    }\n    Private.renderMarked = renderMarked;\n    /**\n     * Handle the default behavior of nodes.\n     */\n    function handleDefaults(node, resolver) {\n        // Handle anchor elements.\n        const anchors = node.getElementsByTagName('a');\n        for (let i = 0; i < anchors.length; i++) {\n            const el = anchors[i];\n            // skip when processing a elements inside svg\n            // which are of type SVGAnimatedString\n            if (!(el instanceof HTMLAnchorElement)) {\n                continue;\n            }\n            const path = el.href;\n            const isLocal = resolver && resolver.isLocal\n                ? resolver.isLocal(path)\n                : URLExt.isLocal(path);\n            // set target attribute if not already present\n            if (!el.target) {\n                el.target = isLocal ? '_self' : '_blank';\n            }\n            // set rel as 'noopener' for non-local anchors\n            if (!isLocal) {\n                el.rel = 'noopener';\n            }\n        }\n        // Handle image elements.\n        const imgs = node.getElementsByTagName('img');\n        for (let i = 0; i < imgs.length; i++) {\n            if (!imgs[i].alt) {\n                imgs[i].alt = 'Image';\n            }\n        }\n    }\n    Private.handleDefaults = handleDefaults;\n    /**\n     * Resolve the relative urls in element `src` and `href` attributes.\n     *\n     * @param node - The head html element.\n     *\n     * @param resolver - A url resolver.\n     *\n     * @param linkHandler - An optional link handler for nodes.\n     *\n     * @returns a promise fulfilled when the relative urls have been resolved.\n     */\n    function handleUrls(node, resolver, linkHandler) {\n        // Set up an array to collect promises.\n        const promises = [];\n        // Handle HTML Elements with src attributes.\n        const nodes = node.querySelectorAll('*[src]');\n        for (let i = 0; i < nodes.length; i++) {\n            promises.push(handleAttr(nodes[i], 'src', resolver));\n        }\n        // Handle anchor elements.\n        const anchors = node.getElementsByTagName('a');\n        for (let i = 0; i < anchors.length; i++) {\n            promises.push(handleAnchor(anchors[i], resolver, linkHandler));\n        }\n        // Handle link elements.\n        const links = node.getElementsByTagName('link');\n        for (let i = 0; i < links.length; i++) {\n            promises.push(handleAttr(links[i], 'href', resolver));\n        }\n        // Wait on all promises.\n        return Promise.all(promises).then(() => undefined);\n    }\n    Private.handleUrls = handleUrls;\n    /**\n     * Apply ids to headers.\n     */\n    function headerAnchors(node) {\n        var _a;\n        const headerNames = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n        for (const headerType of headerNames) {\n            const headers = node.getElementsByTagName(headerType);\n            for (let i = 0; i < headers.length; i++) {\n                const header = headers[i];\n                header.id = ((_a = header.textContent) !== null && _a !== void 0 ? _a : '').replace(/ /g, '-');\n                const anchor = document.createElement('a');\n                anchor.target = '_self';\n                anchor.textContent = '¶';\n                anchor.href = '#' + header.id;\n                anchor.classList.add('jp-InternalAnchorLink');\n                header.appendChild(anchor);\n            }\n        }\n    }\n    Private.headerAnchors = headerAnchors;\n    /**\n     * Handle a node with a `src` or `href` attribute.\n     */\n    async function handleAttr(node, name, resolver) {\n        const source = node.getAttribute(name) || '';\n        const isLocal = resolver.isLocal\n            ? resolver.isLocal(source)\n            : URLExt.isLocal(source);\n        if (!source || !isLocal) {\n            return;\n        }\n        try {\n            const urlPath = await resolver.resolveUrl(source);\n            let url = await resolver.getDownloadUrl(urlPath);\n            if (URLExt.parse(url).protocol !== 'data:') {\n                // Bust caching for local src attrs.\n                // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n            }\n            node.setAttribute(name, url);\n        }\n        catch (err) {\n            // If there was an error getting the url,\n            // just make it an empty link and report the error.\n            node.setAttribute(name, '');\n            throw err;\n        }\n    }\n    /**\n     * Handle an anchor node.\n     */\n    function handleAnchor(anchor, resolver, linkHandler) {\n        // Get the link path without the location prepended.\n        // (e.g. \"./foo.md#Header 1\" vs \"http://localhost:8888/foo.md#Header 1\")\n        let href = anchor.getAttribute('href') || '';\n        const isLocal = resolver.isLocal\n            ? resolver.isLocal(href)\n            : URLExt.isLocal(href);\n        // Bail if it is not a file-like url.\n        if (!href || !isLocal) {\n            return Promise.resolve(undefined);\n        }\n        // Remove the hash until we can handle it.\n        const hash = anchor.hash;\n        if (hash) {\n            // Handle internal link in the file.\n            if (hash === href) {\n                anchor.target = '_self';\n                return Promise.resolve(undefined);\n            }\n            // For external links, remove the hash until we have hash handling.\n            href = href.replace(hash, '');\n        }\n        // Get the appropriate file path.\n        return resolver\n            .resolveUrl(href)\n            .then(urlPath => {\n            // decode encoded url from url to api path\n            const path = decodeURIComponent(urlPath);\n            // Handle the click override.\n            if (linkHandler) {\n                linkHandler.handleLink(anchor, path, hash);\n            }\n            // Get the appropriate file download path.\n            return resolver.getDownloadUrl(urlPath);\n        })\n            .then(url => {\n            // Set the visible anchor.\n            anchor.href = url + hash;\n        })\n            .catch(err => {\n            // If there was an error getting the url,\n            // just make it an empty link.\n            anchor.href = '';\n        });\n    }\n    let markedInitialized = false;\n    /**\n     * Support GitHub flavored Markdown, leave sanitizing to external library.\n     */\n    function initializeMarked() {\n        if (markedInitialized) {\n            return;\n        }\n        markedInitialized = true;\n        marked.setOptions({\n            gfm: true,\n            sanitize: false,\n            // breaks: true; We can't use GFM breaks as it causes problems with tables\n            langPrefix: `cm-s-${CodeMirrorEditor.defaultConfig.theme} language-`,\n            highlight: (code, lang, callback) => {\n                const cb = (err, code) => {\n                    if (callback) {\n                        callback(err, code);\n                    }\n                    return code;\n                };\n                if (!lang) {\n                    // no language, no highlight\n                    return cb(null, code);\n                }\n                Mode.ensure(lang)\n                    .then(spec => {\n                    const el = document.createElement('div');\n                    if (!spec) {\n                        console.error(`No CodeMirror mode: ${lang}`);\n                        return cb(null, code);\n                    }\n                    try {\n                        Mode.run(code, spec.mime, el);\n                        return cb(null, el.innerHTML);\n                    }\n                    catch (err) {\n                        console.error(`Failed to highlight ${lang} code`, err);\n                        return cb(err, code);\n                    }\n                })\n                    .catch(err => {\n                    console.error(`No CodeMirror mode: ${lang}`);\n                    console.error(`Require CodeMirror mode error: ${err}`);\n                    return cb(null, code);\n                });\n                return code;\n            }\n        });\n    }\n    const ANSI_COLORS = [\n        'ansi-black',\n        'ansi-red',\n        'ansi-green',\n        'ansi-yellow',\n        'ansi-blue',\n        'ansi-magenta',\n        'ansi-cyan',\n        'ansi-white',\n        'ansi-black-intense',\n        'ansi-red-intense',\n        'ansi-green-intense',\n        'ansi-yellow-intense',\n        'ansi-blue-intense',\n        'ansi-magenta-intense',\n        'ansi-cyan-intense',\n        'ansi-white-intense'\n    ];\n    /**\n     * Create HTML tags for a string with given foreground, background etc. and\n     * add them to the `out` array.\n     */\n    function pushColoredChunk(chunk, fg, bg, bold, underline, inverse, out) {\n        if (chunk) {\n            const classes = [];\n            const styles = [];\n            if (bold && typeof fg === 'number' && 0 <= fg && fg < 8) {\n                fg += 8; // Bold text uses \"intense\" colors\n            }\n            if (inverse) {\n                [fg, bg] = [bg, fg];\n            }\n            if (typeof fg === 'number') {\n                classes.push(ANSI_COLORS[fg] + '-fg');\n            }\n            else if (fg.length) {\n                styles.push(`color: rgb(${fg})`);\n            }\n            else if (inverse) {\n                classes.push('ansi-default-inverse-fg');\n            }\n            if (typeof bg === 'number') {\n                classes.push(ANSI_COLORS[bg] + '-bg');\n            }\n            else if (bg.length) {\n                styles.push(`background-color: rgb(${bg})`);\n            }\n            else if (inverse) {\n                classes.push('ansi-default-inverse-bg');\n            }\n            if (bold) {\n                classes.push('ansi-bold');\n            }\n            if (underline) {\n                classes.push('ansi-underline');\n            }\n            if (classes.length || styles.length) {\n                out.push('<span');\n                if (classes.length) {\n                    out.push(` class=\"${classes.join(' ')}\"`);\n                }\n                if (styles.length) {\n                    out.push(` style=\"${styles.join('; ')}\"`);\n                }\n                out.push('>');\n                out.push(chunk);\n                out.push('</span>');\n            }\n            else {\n                out.push(chunk);\n            }\n        }\n    }\n    /**\n     * Convert ANSI extended colors to R/G/B triple.\n     */\n    function getExtendedColors(numbers) {\n        let r;\n        let g;\n        let b;\n        const n = numbers.shift();\n        if (n === 2 && numbers.length >= 3) {\n            // 24-bit RGB\n            r = numbers.shift();\n            g = numbers.shift();\n            b = numbers.shift();\n            if ([r, g, b].some(c => c < 0 || 255 < c)) {\n                throw new RangeError('Invalid range for RGB colors');\n            }\n        }\n        else if (n === 5 && numbers.length >= 1) {\n            // 256 colors\n            const idx = numbers.shift();\n            if (idx < 0) {\n                throw new RangeError('Color index must be >= 0');\n            }\n            else if (idx < 16) {\n                // 16 default terminal colors\n                return idx;\n            }\n            else if (idx < 232) {\n                // 6x6x6 color cube, see https://stackoverflow.com/a/27165165/500098\n                r = Math.floor((idx - 16) / 36);\n                r = r > 0 ? 55 + r * 40 : 0;\n                g = Math.floor(((idx - 16) % 36) / 6);\n                g = g > 0 ? 55 + g * 40 : 0;\n                b = (idx - 16) % 6;\n                b = b > 0 ? 55 + b * 40 : 0;\n            }\n            else if (idx < 256) {\n                // grayscale, see https://stackoverflow.com/a/27165165/500098\n                r = g = b = (idx - 232) * 10 + 8;\n            }\n            else {\n                throw new RangeError('Color index must be < 256');\n            }\n        }\n        else {\n            throw new RangeError('Invalid extended color specification');\n        }\n        return [r, g, b];\n    }\n    /**\n     * Transform ANSI color escape codes into HTML <span> tags with CSS\n     * classes such as \"ansi-green-intense-fg\".\n     * The actual colors used are set in the CSS file.\n     * This also removes non-color escape sequences.\n     * This is supposed to have the same behavior as nbconvert.filters.ansi2html()\n     */\n    function ansiSpan(str) {\n        const ansiRe = /\\x1b\\[(.*?)([@-~])/g; // eslint-disable-line no-control-regex\n        let fg = [];\n        let bg = [];\n        let bold = false;\n        let underline = false;\n        let inverse = false;\n        let match;\n        const out = [];\n        const numbers = [];\n        let start = 0;\n        str = escape(str);\n        str += '\\x1b[m'; // Ensure markup for trailing text\n        // tslint:disable-next-line\n        while ((match = ansiRe.exec(str))) {\n            if (match[2] === 'm') {\n                const items = match[1].split(';');\n                for (let i = 0; i < items.length; i++) {\n                    const item = items[i];\n                    if (item === '') {\n                        numbers.push(0);\n                    }\n                    else if (item.search(/^\\d+$/) !== -1) {\n                        numbers.push(parseInt(item, 10));\n                    }\n                    else {\n                        // Ignored: Invalid color specification\n                        numbers.length = 0;\n                        break;\n                    }\n                }\n            }\n            else {\n                // Ignored: Not a color code\n            }\n            const chunk = str.substring(start, match.index);\n            pushColoredChunk(chunk, fg, bg, bold, underline, inverse, out);\n            start = ansiRe.lastIndex;\n            while (numbers.length) {\n                const n = numbers.shift();\n                switch (n) {\n                    case 0:\n                        fg = bg = [];\n                        bold = false;\n                        underline = false;\n                        inverse = false;\n                        break;\n                    case 1:\n                    case 5:\n                        bold = true;\n                        break;\n                    case 4:\n                        underline = true;\n                        break;\n                    case 7:\n                        inverse = true;\n                        break;\n                    case 21:\n                    case 22:\n                        bold = false;\n                        break;\n                    case 24:\n                        underline = false;\n                        break;\n                    case 27:\n                        inverse = false;\n                        break;\n                    case 30:\n                    case 31:\n                    case 32:\n                    case 33:\n                    case 34:\n                    case 35:\n                    case 36:\n                    case 37:\n                        fg = n - 30;\n                        break;\n                    case 38:\n                        try {\n                            fg = getExtendedColors(numbers);\n                        }\n                        catch (e) {\n                            numbers.length = 0;\n                        }\n                        break;\n                    case 39:\n                        fg = [];\n                        break;\n                    case 40:\n                    case 41:\n                    case 42:\n                    case 43:\n                    case 44:\n                    case 45:\n                    case 46:\n                    case 47:\n                        bg = n - 40;\n                        break;\n                    case 48:\n                        try {\n                            bg = getExtendedColors(numbers);\n                        }\n                        catch (e) {\n                            numbers.length = 0;\n                        }\n                        break;\n                    case 49:\n                        bg = [];\n                        break;\n                    case 90:\n                    case 91:\n                    case 92:\n                    case 93:\n                    case 94:\n                    case 95:\n                    case 96:\n                    case 97:\n                        fg = n - 90 + 8;\n                        break;\n                    case 100:\n                    case 101:\n                    case 102:\n                    case 103:\n                    case 104:\n                    case 105:\n                    case 106:\n                    case 107:\n                        bg = n - 100 + 8;\n                        break;\n                    default:\n                    // Unknown codes are ignored\n                }\n            }\n        }\n        return out.join('');\n    }\n    Private.ansiSpan = ansiSpan;\n})(Private || (Private = {}));\n//# sourceMappingURL=renderers.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { Token } from '@lumino/coreutils';\n/* tslint:disable */\n/**\n * The rendermime token.\n */\nexport const IRenderMimeRegistry = new Token('@jupyterlab/rendermime:IRenderMimeRegistry');\n/* tslint:enable */\n/* tslint:disable */\n/**\n * The latex typesetter token.\n */\nexport const ILatexTypesetter = new Token('@jupyterlab/rendermime:ILatexTypesetter');\n/* tslint:enable */\n//# sourceMappingURL=tokens.js.map","import { nullTranslator } from '@jupyterlab/translation';\nimport { Widget } from '@lumino/widgets';\nimport * as renderers from './renderers';\n/**\n * A common base class for mime renderers.\n */\nexport class RenderedCommon extends Widget {\n    /**\n     * Construct a new rendered common widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super();\n        this.mimeType = options.mimeType;\n        this.sanitizer = options.sanitizer;\n        this.resolver = options.resolver;\n        this.linkHandler = options.linkHandler;\n        this.translator = options.translator || nullTranslator;\n        this.latexTypesetter = options.latexTypesetter;\n        this.node.dataset['mimeType'] = this.mimeType;\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     *\n     * #### Notes\n     * If the DOM node for this widget already has content, it is emptied\n     * before rendering. Subclasses that do not want this behavior\n     * (if, for instance, they are using DOM diffing), should override\n     * this method and not call `super.renderModel()`.\n     */\n    async renderModel(model) {\n        // TODO compare model against old model for early bail?\n        // Empty any existing content in the node from previous renders\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        // Toggle the trusted class on the widget.\n        this.toggleClass('jp-mod-trusted', model.trusted);\n        // Render the actual content.\n        await this.render(model);\n        // Handle the fragment identifier if given.\n        const { fragment } = model.metadata;\n        if (fragment) {\n            this.setFragment(fragment);\n        }\n    }\n    /**\n     * Set the URI fragment identifier.\n     *\n     * @param fragment - The URI fragment identifier.\n     */\n    setFragment(fragment) {\n        /* no-op */\n    }\n}\n/**\n * A common base class for HTML mime renderers.\n */\nexport class RenderedHTMLCommon extends RenderedCommon {\n    /**\n     * Construct a new rendered HTML common widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedHTMLCommon');\n    }\n    setFragment(fragment) {\n        let el;\n        try {\n            el = this.node.querySelector(fragment);\n        }\n        catch (error) {\n            console.warn('Unable to set URI fragment identifier.', error);\n        }\n        if (el) {\n            el.scrollIntoView();\n        }\n    }\n}\n/**\n * A mime renderer for displaying HTML and math.\n */\nexport class RenderedHTML extends RenderedHTMLCommon {\n    /**\n     * Construct a new rendered HTML widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedHTML');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderHTML({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter,\n            translator: this.translator\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A mime renderer for displaying LaTeX output.\n */\nexport class RenderedLatex extends RenderedCommon {\n    /**\n     * Construct a new rendered LaTeX widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedLatex');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderLatex({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A mime renderer for displaying images.\n */\nexport class RenderedImage extends RenderedCommon {\n    /**\n     * Construct a new rendered image widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedImage');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const metadata = model.metadata[this.mimeType];\n        return renderers.renderImage({\n            host: this.node,\n            mimeType: this.mimeType,\n            source: String(model.data[this.mimeType]),\n            width: metadata && metadata.width,\n            height: metadata && metadata.height,\n            needsBackground: model.metadata['needs_background'],\n            unconfined: metadata && metadata.unconfined\n        });\n    }\n}\n/**\n * A mime renderer for displaying Markdown with embedded latex.\n */\nexport class RenderedMarkdown extends RenderedHTMLCommon {\n    /**\n     * Construct a new rendered markdown widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedMarkdown');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderMarkdown({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter,\n            translator: this.translator\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A widget for displaying SVG content.\n */\nexport class RenderedSVG extends RenderedCommon {\n    /**\n     * Construct a new rendered SVG widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedSVG');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const metadata = model.metadata[this.mimeType];\n        return renderers.renderSVG({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            unconfined: metadata && metadata.unconfined,\n            translator: this.translator\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A widget for displaying plain text and console text.\n */\nexport class RenderedText extends RenderedCommon {\n    /**\n     * Construct a new rendered text widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedText');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderText({\n            host: this.node,\n            sanitizer: this.sanitizer,\n            source: String(model.data[this.mimeType]),\n            translator: this.translator\n        });\n    }\n}\n/**\n * A widget for displaying JavaScript output.\n */\nexport class RenderedJavaScript extends RenderedCommon {\n    /**\n     * Construct a new rendered text widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedJavaScript');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const trans = this.translator.load('jupyterlab');\n        return renderers.renderText({\n            host: this.node,\n            sanitizer: this.sanitizer,\n            source: trans.__('JavaScript output is disabled in JupyterLab'),\n            translator: this.translator\n        });\n    }\n}\n//# sourceMappingURL=widgets.js.map","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match HTML entities and HTML characters. */\nvar reUnescapedHtml = /[&<>\"'`]/g,\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/** Used to map characters to HTML entities. */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '`': '&#96;'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nvar escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n * their corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * Backticks are escaped because in IE < 9, they can break out of\n * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n * [#133](https://html5sec.org/#133) of the\n * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */\nfunction escape(string) {\n  string = toString(string);\n  return (string && reHasUnescapedHtml.test(string))\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\n    : string;\n}\n\nmodule.exports = escape;\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {exports: {}};\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"],"sourceRoot":""}