(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[1753],{65246:(e,t,s)=>{"use strict";s.d(t,{I:()=>a});var n=s(37024),r=s(58137);class a{constructor(e){this._history=[],this._executionCount=0,this._isDisposed=!1,this._disposed=new r.Signal(this),this._parentHeader=void 0;const{id:t,name:s,sendMessage:n}=e;this._id=t,this._name=s,this._sendMessage=n}get ready(){return Promise.resolve()}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}get id(){return this._id}get name(){return this._name}get executionCount(){return this._executionCount}get parentHeader(){return this._parentHeader}dispose(){this.isDisposed||(this._isDisposed=!0,this._disposed.emit(void 0))}async handleMessage(e){switch(this._busy(e),e.header.msg_type){case"kernel_info_request":await this._kernelInfo(e);break;case"execute_request":await this._executeRequest(e);break;case"complete_request":await this._complete(e);break;case"history_request":await this._historyRequest(e)}this._idle(e)}stream(e){var t,s;const r=n.KernelMessage.createMessage({channel:"iopub",msgType:"stream",session:null!==(s=null===(t=this._parentHeader)||void 0===t?void 0:t.session)&&void 0!==s?s:"",parentHeader:this._parentHeader,content:e});this._sendMessage(r)}displayData(e){var t,s;const r=n.KernelMessage.createMessage({channel:"iopub",msgType:"display_data",session:null!==(s=null===(t=this._parentHeader)||void 0===t?void 0:t.session)&&void 0!==s?s:"",parentHeader:this._parentHeader,content:e});this._sendMessage(r)}_idle(e){const t=n.KernelMessage.createMessage({msgType:"status",session:e.header.session,parentHeader:e.header,channel:"iopub",content:{execution_state:"idle"}});this._sendMessage(t)}_busy(e){const t=n.KernelMessage.createMessage({msgType:"status",session:e.header.session,parentHeader:e.header,channel:"iopub",content:{execution_state:"busy"}});this._sendMessage(t)}async _kernelInfo(e){const t=await this.kernelInfoRequest(),s=n.KernelMessage.createMessage({msgType:"kernel_info_reply",channel:"shell",session:e.header.session,parentHeader:e.header,content:t});this._sendMessage(s)}async _executeRequest(e){const t=e.content;this._executionCount++,this._parentHeader=e.header,this._executeInput(e);try{const s=await this.executeRequest(t);t.code.startsWith("%")||this._history.push([0,0,t.code]),Object.keys(s.data).length>0&&this._executeResult(e,s),this._executeReply(e,{execution_count:this._executionCount,status:"ok",user_expressions:{},payload:[]})}catch(t){const{name:s,stack:n,message:r}=t,a={ename:s,evalue:r,traceback:[n]};this._error(e,a),this._executeReply(e,{execution_count:this._executionCount,status:"error",...a})}}async _historyRequest(e){const t=e,s=n.KernelMessage.createMessage({msgType:"history_reply",channel:"shell",parentHeader:t.header,session:e.header.session,content:{status:"ok",history:this._history}});this._sendMessage(s)}_executeInput(e){const t=e,s=t.content.code,r=n.KernelMessage.createMessage({msgType:"execute_input",parentHeader:t.header,channel:"iopub",session:e.header.session,content:{code:s,execution_count:this._executionCount}});this._sendMessage(r)}_executeResult(e,t){const s=n.KernelMessage.createMessage({msgType:"execute_result",parentHeader:e.header,channel:"iopub",session:e.header.session,content:{...t,execution_count:this._executionCount}});this._sendMessage(s)}_executeReply(e,t){const s=e,r=n.KernelMessage.createMessage({msgType:"execute_reply",channel:"shell",parentHeader:s.header,session:e.header.session,content:t});this._sendMessage(r)}_error(e,t){const s=n.KernelMessage.createMessage({msgType:"error",parentHeader:e.header,channel:"iopub",session:e.header.session,content:t});this._sendMessage(s)}async _complete(e){const t=e,s=await this.completeRequest(t.content),r=n.KernelMessage.createMessage({msgType:"complete_reply",parentHeader:t.header,channel:"shell",session:e.header.session,content:s});this._sendMessage(r)}}},64831:(e,t,s)=>{"use strict";s.d(t,{L:()=>r,q:()=>a});var n=s(66065);const r=new n.Token("@jupyterlite/kernel:IKernels"),a=new n.Token("@jupyterlite/kernelspec:IKernelSpecs")},51753:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>c});var n=s(98838),r=s(64831),a=s(65246),o=s(66065),i=s(34059),l=s(6109);class d extends a.I{constructor(e){var t;super(e),this._executeDelegate=new o.PromiseDelegate,this._ready=new o.PromiseDelegate;const{pyodideUrl:s}=e,r=null!==(t=e.pyoliteWheel)&&void 0!==t?t:l,a=n.URLExt.join(window.location.origin,r),d=s.slice(0,s.lastIndexOf("/")+1),c=new Blob([[`importScripts("${s}");`,`var indexURL = "${d}";`,`var _pyoliteWheelUrl = '${a}'`,i].join("\n")]);this._worker=new Worker(window.URL.createObjectURL(c)),this._worker.onmessage=e=>{this._processWorkerMessage(e.data)},this._ready.resolve()}dispose(){this.isDisposed||(console.log(`Dispose worker for kernel ${this.id}`),this._worker.terminate(),super.dispose())}get ready(){return this._ready.promise}_processWorkerMessage(e){var t,s;const n=this.parentHeader;switch(e.type){case"stdout":{const t={event:"stream",name:"stdout",parentHeader:n,text:e.stdout};this.stream(t);break}case"stderr":{const{message:t}=e.stderr,s={event:"stream",name:"stderr",parentHeader:n,text:null!=t?t:e.stderr};this.stream(s);break}case"results":{const s=null!==(t=e.results)&&void 0!==t?t:{data:{},metadata:{}};this._executeDelegate.resolve(s);break}case"error":{const{name:t,stack:s,message:r}=e.error,a={name:t,stack:s,message:r};this._executeDelegate.resolve({...a,parentHeader:n});break}case"display":{const t=null!==(s=e.bundle)&&void 0!==s?s:{data:{},metadata:{}};this.displayData(t);break}default:this._executeDelegate.resolve({data:{},metadata:{}})}}async kernelInfoRequest(){return{implementation:"pyodide",implementation_version:"0.1.0",language_info:{codemirror_mode:{name:"python",version:3},file_extension:".py",mimetype:"text/x-python",name:"python",nbconvert_exporter:"python",pygments_lexer:"ipython3",version:"3.8"},protocol_version:"5.3",status:"ok",banner:"Pyolite: A WebAssembly-powered Python kernel backed by Pyodide",help_links:[{text:"Python (WASM) Kernel",url:"https://pyodide.org"}]}}async executeRequest(e){const{code:t}=e,s=await this._eval(t);if(s.name)throw s;return{execution_count:this.executionCount,...s}}async completeRequest(e){return{matches:[],cursor_start:0,cursor_end:0,metadata:{},status:"ok"}}async inspectRequest(e){throw new Error("Not implemented")}async isCompleteRequest(e){throw new Error("Not implemented")}async commInfoRequest(e){throw new Error("Not implemented")}async inputRequest(e){throw new Error("Not implemented")}async _sendWorkerMessage(e){return this._executeDelegate=new o.PromiseDelegate,this._worker.postMessage(e),await this._executeDelegate.promise}async _eval(e){return this._sendWorkerMessage({code:e})}}const c=[{id:"@jupyterlite/pyolite-kernel-extension:kernel",autoStart:!0,requires:[r.q],activate:(e,t)=>{const s=n.PageConfig.getOption("pyodideUrl")||"https://cdn.jsdelivr.net/pyodide/v0.17.0/full/pyodide.js",r=n.URLExt.isLocal(s)?n.URLExt.join(window.location.origin,s):s;t.register({spec:{name:"python",display_name:"Pyolite",language:"python",argv:[],spec:{argv:[],env:{},display_name:"Pyolite",language:"python",interrupt_mode:"message",metadata:{}},resources:{"logo-32x32":"TODO","logo-64x64":"/kernelspecs/python.png"}},create:async e=>new d({...e,pyodideUrl:r})})}}]},34059:e=>{"use strict";e.exports="\"use strict\";\n/**\n * Store the kernel and interpreter instances.\n */\n// eslint-disable-next-line\n// @ts-ignore: breaks typedoc\nlet kernel;\n// eslint-disable-next-line\n// @ts-ignore: breaks typedoc\nlet interpreter;\n/**\n * Load Pyodided and initialize the interpreter.\n */\nasync function loadPyodideAndPackages() {\n    // new in 0.17.0 indexURL must be provided\n    await loadPyodide({ indexURL });\n    await pyodide.loadPackage(['matplotlib']);\n    await pyodide.runPythonAsync(`\n    import micropip\n    await micropip.install('${_pyoliteWheelUrl}')\n    import pyolite\n  `);\n    kernel = pyodide.globals.get('pyolite').kernel_instance;\n    interpreter = kernel.interpreter;\n    const version = pyodide.globals.get('pyolite').__version__;\n    console.log('Pyolite kernel initialized, version', version);\n}\n/**\n * Recursively convert a Map to a JavaScript object\n * @param The Map object to convert\n */\nfunction mapToObject(map) {\n    const out = {};\n    map.forEach((value, key) => {\n        out[key] = value instanceof Map ? mapToObject(value) : value;\n    });\n    return out;\n}\n/**\n * Format the response from the Pyodide evaluation.\n *\n * @param res The result object from the Pyodide evaluation\n */\nfunction formatResult(res) {\n    if (!pyodide.isPyProxy(res)) {\n        return res;\n    }\n    // TODO: this is a bit brittle\n    const m = res.toJs();\n    const results = mapToObject(m);\n    console.log('results', results);\n    return results;\n}\n// eslint-disable-next-line\n// @ts-ignore: breaks typedoc\nconst pyodideReadyPromise = loadPyodideAndPackages();\nself.onmessage = async (event) => {\n    await pyodideReadyPromise;\n    const data = event.data;\n    console.log('Inside worker', data);\n    const stdoutCallback = (stdout) => {\n        postMessage({\n            parentHeader: data.parentHeader,\n            stdout,\n            type: 'stdout'\n        });\n    };\n    const stderrCallback = (stderr) => {\n        postMessage({\n            parentHeader: data.parentHeader,\n            stderr,\n            type: 'stderr'\n        });\n    };\n    // TODO: support multiple\n    const displayCallback = (res) => {\n        const bundle = formatResult(res);\n        postMessage({\n            parentHeader: data.parentHeader,\n            bundle,\n            type: 'display'\n        });\n    };\n    interpreter.stdout_callback = stdoutCallback;\n    interpreter.stderr_callback = stderrCallback;\n    kernel.display_publisher.display_callback = displayCallback;\n    let res;\n    try {\n        res = await interpreter.run(data.code);\n    }\n    catch (error) {\n        postMessage({\n            parentheader: data.parentheader,\n            type: 'error',\n            error\n        });\n        return;\n    }\n    const reply = {\n        parentheader: data.parentheader,\n        type: 'results'\n    };\n    if (!res) {\n        postMessage(reply);\n        return;\n    }\n    try {\n        const results = formatResult(res);\n        postMessage({\n            ...reply,\n            results\n        });\n    }\n    catch (e) {\n        postMessage(reply);\n    }\n};\n"},6109:(e,t,s)=>{"use strict";e.exports=s.p+"pyolite-0.1.0-py3-none-any.whl"}}]);
//# sourceMappingURL=1753.bundle.js.map